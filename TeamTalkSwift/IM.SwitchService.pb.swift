/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: IM.SwitchService.proto
 *
 */

import Foundation
import SwiftProtobuf


// service id: 0x0006

struct IM_SwitchService_IMP2PCmdMsg: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_SwitchService_IMP2PCmdMsg"}
  public var protoMessageName: String {return "IMP2PCmdMsg"}
  public var protoPackageName: String {return "IM.SwitchService"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "from_user_id", json: "fromUserId", swift: "fromUserId"),
    2: .unique(proto: "to_user_id", json: "toUserId", swift: "toUserId"),
    3: .unique(proto: "cmd_msg_data", json: "cmdMsgData", swift: "cmdMsgData"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  ///  cmd id:		0x0601
  private var _fromUserId: UInt32? = nil
  var fromUserId: UInt32 {
    get {return _fromUserId ?? 0}
    set {_fromUserId = newValue}
  }
  public var hasFromUserId: Bool {
    return _fromUserId != nil
  }
  public mutating func clearFromUserId() {
    return _fromUserId = nil
  }

  private var _toUserId: UInt32? = nil
  var toUserId: UInt32 {
    get {return _toUserId ?? 0}
    set {_toUserId = newValue}
  }
  public var hasToUserId: Bool {
    return _toUserId != nil
  }
  public mutating func clearToUserId() {
    return _toUserId = nil
  }

  private var _cmdMsgData: String? = nil
  var cmdMsgData: String {
    get {return _cmdMsgData ?? ""}
    set {_cmdMsgData = newValue}
  }
  public var hasCmdMsgData: Bool {
    return _cmdMsgData != nil
  }
  public mutating func clearCmdMsgData() {
    return _cmdMsgData = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_fromUserId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_toUserId)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_cmdMsgData)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _fromUserId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _toUserId ?? 0, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _cmdMsgData ?? "", protoFieldNumber: 3)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_SwitchService_IMP2PCmdMsg) -> Bool {
    if (fromUserId != other.fromUserId) {return false}
    if (toUserId != other.toUserId) {return false}
    if (cmdMsgData != other.cmdMsgData) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

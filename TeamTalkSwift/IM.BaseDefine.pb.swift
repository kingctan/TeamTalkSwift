/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: IM.BaseDefine.proto
 *
 */

import Foundation
import SwiftProtobuf


///   service id
enum IM_BaseDefine_ServiceID: SwiftProtobuf.Enum {
  typealias RawValue = Int

  ///   for login
  case sidLogin // = 1

  ///   for friend list
  case sidBuddyList // = 2
  case sidMsg // = 3

  ///   for group message
  case sidGroup // = 4
  case sidFile // = 5
  case sidSwitchService // = 6
  case sidOther // = 7
  case sidInternal // = 8

  init() {
    self = .sidLogin
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .sidLogin
    case 2: self = .sidBuddyList
    case 3: self = .sidMsg
    case 4: self = .sidGroup
    case 5: self = .sidFile
    case 6: self = .sidSwitchService
    case 7: self = .sidOther
    case 8: self = .sidInternal
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "sidLogin": self = .sidLogin
    case "sidBuddyList": self = .sidBuddyList
    case "sidMsg": self = .sidMsg
    case "sidGroup": self = .sidGroup
    case "sidFile": self = .sidFile
    case "sidSwitchService": self = .sidSwitchService
    case "sidOther": self = .sidOther
    case "sidInternal": self = .sidInternal
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "SID_LOGIN": self = .sidLogin
    case "SID_BUDDY_LIST": self = .sidBuddyList
    case "SID_MSG": self = .sidMsg
    case "SID_GROUP": self = .sidGroup
    case "SID_FILE": self = .sidFile
    case "SID_SWITCH_SERVICE": self = .sidSwitchService
    case "SID_OTHER": self = .sidOther
    case "SID_INTERNAL": self = .sidInternal
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "SID_LOGIN": self = .sidLogin
    case "SID_BUDDY_LIST": self = .sidBuddyList
    case "SID_MSG": self = .sidMsg
    case "SID_GROUP": self = .sidGroup
    case "SID_FILE": self = .sidFile
    case "SID_SWITCH_SERVICE": self = .sidSwitchService
    case "SID_OTHER": self = .sidOther
    case "SID_INTERNAL": self = .sidInternal
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .sidLogin: return 1
      case .sidBuddyList: return 2
      case .sidMsg: return 3
      case .sidGroup: return 4
      case .sidFile: return 5
      case .sidSwitchService: return 6
      case .sidOther: return 7
      case .sidInternal: return 8
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .sidLogin: return "\"SID_LOGIN\""
      case .sidBuddyList: return "\"SID_BUDDY_LIST\""
      case .sidMsg: return "\"SID_MSG\""
      case .sidGroup: return "\"SID_GROUP\""
      case .sidFile: return "\"SID_FILE\""
      case .sidSwitchService: return "\"SID_SWITCH_SERVICE\""
      case .sidOther: return "\"SID_OTHER\""
      case .sidInternal: return "\"SID_INTERNAL\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .sidLogin: return ".sidLogin"
      case .sidBuddyList: return ".sidBuddyList"
      case .sidMsg: return ".sidMsg"
      case .sidGroup: return ".sidGroup"
      case .sidFile: return ".sidFile"
      case .sidSwitchService: return ".sidSwitchService"
      case .sidOther: return ".sidOther"
      case .sidInternal: return ".sidInternal"
      }
    }
  }

}

///   command id for login
enum IM_BaseDefine_LoginCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case cidLoginReqMsgserver // = 257
  case cidLoginResMsgserver // = 258
  case cidLoginReqUserlogin // = 259
  case cidLoginResUserlogin // = 260
  case cidLoginReqLoginout // = 261
  case cidLoginResLoginout // = 262
  case cidLoginKickUser // = 263
  case cidLoginReqDevicetoken // = 264
  case cidLoginResDevicetoken // = 265
  case cidLoginReqKickpcclient // = 266
  case cidLoginResKickpcclient // = 267

  ///  勿扰
  case cidLoginReqPushShield // = 268
  case cidLoginResPushShield // = 269
  case cidLoginReqQueryPushShield // = 270
  case cidLoginResQueryPushShield // = 271

  init() {
    self = .cidLoginReqMsgserver
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 257: self = .cidLoginReqMsgserver
    case 258: self = .cidLoginResMsgserver
    case 259: self = .cidLoginReqUserlogin
    case 260: self = .cidLoginResUserlogin
    case 261: self = .cidLoginReqLoginout
    case 262: self = .cidLoginResLoginout
    case 263: self = .cidLoginKickUser
    case 264: self = .cidLoginReqDevicetoken
    case 265: self = .cidLoginResDevicetoken
    case 266: self = .cidLoginReqKickpcclient
    case 267: self = .cidLoginResKickpcclient
    case 268: self = .cidLoginReqPushShield
    case 269: self = .cidLoginResPushShield
    case 270: self = .cidLoginReqQueryPushShield
    case 271: self = .cidLoginResQueryPushShield
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidLoginReqMsgserver": self = .cidLoginReqMsgserver
    case "cidLoginResMsgserver": self = .cidLoginResMsgserver
    case "cidLoginReqUserlogin": self = .cidLoginReqUserlogin
    case "cidLoginResUserlogin": self = .cidLoginResUserlogin
    case "cidLoginReqLoginout": self = .cidLoginReqLoginout
    case "cidLoginResLoginout": self = .cidLoginResLoginout
    case "cidLoginKickUser": self = .cidLoginKickUser
    case "cidLoginReqDevicetoken": self = .cidLoginReqDevicetoken
    case "cidLoginResDevicetoken": self = .cidLoginResDevicetoken
    case "cidLoginReqKickpcclient": self = .cidLoginReqKickpcclient
    case "cidLoginResKickpcclient": self = .cidLoginResKickpcclient
    case "cidLoginReqPushShield": self = .cidLoginReqPushShield
    case "cidLoginResPushShield": self = .cidLoginResPushShield
    case "cidLoginReqQueryPushShield": self = .cidLoginReqQueryPushShield
    case "cidLoginResQueryPushShield": self = .cidLoginResQueryPushShield
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_LOGIN_REQ_MSGSERVER": self = .cidLoginReqMsgserver
    case "CID_LOGIN_RES_MSGSERVER": self = .cidLoginResMsgserver
    case "CID_LOGIN_REQ_USERLOGIN": self = .cidLoginReqUserlogin
    case "CID_LOGIN_RES_USERLOGIN": self = .cidLoginResUserlogin
    case "CID_LOGIN_REQ_LOGINOUT": self = .cidLoginReqLoginout
    case "CID_LOGIN_RES_LOGINOUT": self = .cidLoginResLoginout
    case "CID_LOGIN_KICK_USER": self = .cidLoginKickUser
    case "CID_LOGIN_REQ_DEVICETOKEN": self = .cidLoginReqDevicetoken
    case "CID_LOGIN_RES_DEVICETOKEN": self = .cidLoginResDevicetoken
    case "CID_LOGIN_REQ_KICKPCCLIENT": self = .cidLoginReqKickpcclient
    case "CID_LOGIN_RES_KICKPCCLIENT": self = .cidLoginResKickpcclient
    case "CID_LOGIN_REQ_PUSH_SHIELD": self = .cidLoginReqPushShield
    case "CID_LOGIN_RES_PUSH_SHIELD": self = .cidLoginResPushShield
    case "CID_LOGIN_REQ_QUERY_PUSH_SHIELD": self = .cidLoginReqQueryPushShield
    case "CID_LOGIN_RES_QUERY_PUSH_SHIELD": self = .cidLoginResQueryPushShield
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_LOGIN_REQ_MSGSERVER": self = .cidLoginReqMsgserver
    case "CID_LOGIN_RES_MSGSERVER": self = .cidLoginResMsgserver
    case "CID_LOGIN_REQ_USERLOGIN": self = .cidLoginReqUserlogin
    case "CID_LOGIN_RES_USERLOGIN": self = .cidLoginResUserlogin
    case "CID_LOGIN_REQ_LOGINOUT": self = .cidLoginReqLoginout
    case "CID_LOGIN_RES_LOGINOUT": self = .cidLoginResLoginout
    case "CID_LOGIN_KICK_USER": self = .cidLoginKickUser
    case "CID_LOGIN_REQ_DEVICETOKEN": self = .cidLoginReqDevicetoken
    case "CID_LOGIN_RES_DEVICETOKEN": self = .cidLoginResDevicetoken
    case "CID_LOGIN_REQ_KICKPCCLIENT": self = .cidLoginReqKickpcclient
    case "CID_LOGIN_RES_KICKPCCLIENT": self = .cidLoginResKickpcclient
    case "CID_LOGIN_REQ_PUSH_SHIELD": self = .cidLoginReqPushShield
    case "CID_LOGIN_RES_PUSH_SHIELD": self = .cidLoginResPushShield
    case "CID_LOGIN_REQ_QUERY_PUSH_SHIELD": self = .cidLoginReqQueryPushShield
    case "CID_LOGIN_RES_QUERY_PUSH_SHIELD": self = .cidLoginResQueryPushShield
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidLoginReqMsgserver: return 257
      case .cidLoginResMsgserver: return 258
      case .cidLoginReqUserlogin: return 259
      case .cidLoginResUserlogin: return 260
      case .cidLoginReqLoginout: return 261
      case .cidLoginResLoginout: return 262
      case .cidLoginKickUser: return 263
      case .cidLoginReqDevicetoken: return 264
      case .cidLoginResDevicetoken: return 265
      case .cidLoginReqKickpcclient: return 266
      case .cidLoginResKickpcclient: return 267
      case .cidLoginReqPushShield: return 268
      case .cidLoginResPushShield: return 269
      case .cidLoginReqQueryPushShield: return 270
      case .cidLoginResQueryPushShield: return 271
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidLoginReqMsgserver: return "\"CID_LOGIN_REQ_MSGSERVER\""
      case .cidLoginResMsgserver: return "\"CID_LOGIN_RES_MSGSERVER\""
      case .cidLoginReqUserlogin: return "\"CID_LOGIN_REQ_USERLOGIN\""
      case .cidLoginResUserlogin: return "\"CID_LOGIN_RES_USERLOGIN\""
      case .cidLoginReqLoginout: return "\"CID_LOGIN_REQ_LOGINOUT\""
      case .cidLoginResLoginout: return "\"CID_LOGIN_RES_LOGINOUT\""
      case .cidLoginKickUser: return "\"CID_LOGIN_KICK_USER\""
      case .cidLoginReqDevicetoken: return "\"CID_LOGIN_REQ_DEVICETOKEN\""
      case .cidLoginResDevicetoken: return "\"CID_LOGIN_RES_DEVICETOKEN\""
      case .cidLoginReqKickpcclient: return "\"CID_LOGIN_REQ_KICKPCCLIENT\""
      case .cidLoginResKickpcclient: return "\"CID_LOGIN_RES_KICKPCCLIENT\""
      case .cidLoginReqPushShield: return "\"CID_LOGIN_REQ_PUSH_SHIELD\""
      case .cidLoginResPushShield: return "\"CID_LOGIN_RES_PUSH_SHIELD\""
      case .cidLoginReqQueryPushShield: return "\"CID_LOGIN_REQ_QUERY_PUSH_SHIELD\""
      case .cidLoginResQueryPushShield: return "\"CID_LOGIN_RES_QUERY_PUSH_SHIELD\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidLoginReqMsgserver: return ".cidLoginReqMsgserver"
      case .cidLoginResMsgserver: return ".cidLoginResMsgserver"
      case .cidLoginReqUserlogin: return ".cidLoginReqUserlogin"
      case .cidLoginResUserlogin: return ".cidLoginResUserlogin"
      case .cidLoginReqLoginout: return ".cidLoginReqLoginout"
      case .cidLoginResLoginout: return ".cidLoginResLoginout"
      case .cidLoginKickUser: return ".cidLoginKickUser"
      case .cidLoginReqDevicetoken: return ".cidLoginReqDevicetoken"
      case .cidLoginResDevicetoken: return ".cidLoginResDevicetoken"
      case .cidLoginReqKickpcclient: return ".cidLoginReqKickpcclient"
      case .cidLoginResKickpcclient: return ".cidLoginResKickpcclient"
      case .cidLoginReqPushShield: return ".cidLoginReqPushShield"
      case .cidLoginResPushShield: return ".cidLoginResPushShield"
      case .cidLoginReqQueryPushShield: return ".cidLoginReqQueryPushShield"
      case .cidLoginResQueryPushShield: return ".cidLoginResQueryPushShield"
      }
    }
  }

}

///   command id for buddy list
enum IM_BaseDefine_BuddyListCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case cidBuddyListRecentContactSessionRequest // = 513
  case cidBuddyListRecentContactSessionResponse // = 514
  case cidBuddyListStatusNotify // = 515
  case cidBuddyListUserInfoRequest // = 516
  case cidBuddyListUserInfoResponse // = 517
  case cidBuddyListRemoveSessionReq // = 518
  case cidBuddyListRemoveSessionRes // = 519
  case cidBuddyListAllUserRequest // = 520
  case cidBuddyListAllUserResponse // = 521
  case cidBuddyListUsersStatusRequest // = 522
  case cidBuddyListUsersStatusResponse // = 523
  case cidBuddyListChangeAvatarRequest // = 524
  case cidBuddyListChangeAvatarResponse // = 525
  case cidBuddyListPcLoginStatusNotify // = 526
  case cidBuddyListRemoveSessionNotify // = 527
  case cidBuddyListDepartmentRequest // = 528
  case cidBuddyListDepartmentResponse // = 529

  ///  头像更改通知
  case cidBuddyListAvatarChangedNotify // = 530

  ///  修改个性签名请求
  case cidBuddyListChangeSignInfoRequest // = 531
  case cidBuddyListChangeSignInfoResponse // = 532

  ///  签名修改通知
  case cidBuddyListSignInfoChangedNotify // = 533

  init() {
    self = .cidBuddyListRecentContactSessionRequest
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 513: self = .cidBuddyListRecentContactSessionRequest
    case 514: self = .cidBuddyListRecentContactSessionResponse
    case 515: self = .cidBuddyListStatusNotify
    case 516: self = .cidBuddyListUserInfoRequest
    case 517: self = .cidBuddyListUserInfoResponse
    case 518: self = .cidBuddyListRemoveSessionReq
    case 519: self = .cidBuddyListRemoveSessionRes
    case 520: self = .cidBuddyListAllUserRequest
    case 521: self = .cidBuddyListAllUserResponse
    case 522: self = .cidBuddyListUsersStatusRequest
    case 523: self = .cidBuddyListUsersStatusResponse
    case 524: self = .cidBuddyListChangeAvatarRequest
    case 525: self = .cidBuddyListChangeAvatarResponse
    case 526: self = .cidBuddyListPcLoginStatusNotify
    case 527: self = .cidBuddyListRemoveSessionNotify
    case 528: self = .cidBuddyListDepartmentRequest
    case 529: self = .cidBuddyListDepartmentResponse
    case 530: self = .cidBuddyListAvatarChangedNotify
    case 531: self = .cidBuddyListChangeSignInfoRequest
    case 532: self = .cidBuddyListChangeSignInfoResponse
    case 533: self = .cidBuddyListSignInfoChangedNotify
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidBuddyListRecentContactSessionRequest": self = .cidBuddyListRecentContactSessionRequest
    case "cidBuddyListRecentContactSessionResponse": self = .cidBuddyListRecentContactSessionResponse
    case "cidBuddyListStatusNotify": self = .cidBuddyListStatusNotify
    case "cidBuddyListUserInfoRequest": self = .cidBuddyListUserInfoRequest
    case "cidBuddyListUserInfoResponse": self = .cidBuddyListUserInfoResponse
    case "cidBuddyListRemoveSessionReq": self = .cidBuddyListRemoveSessionReq
    case "cidBuddyListRemoveSessionRes": self = .cidBuddyListRemoveSessionRes
    case "cidBuddyListAllUserRequest": self = .cidBuddyListAllUserRequest
    case "cidBuddyListAllUserResponse": self = .cidBuddyListAllUserResponse
    case "cidBuddyListUsersStatusRequest": self = .cidBuddyListUsersStatusRequest
    case "cidBuddyListUsersStatusResponse": self = .cidBuddyListUsersStatusResponse
    case "cidBuddyListChangeAvatarRequest": self = .cidBuddyListChangeAvatarRequest
    case "cidBuddyListChangeAvatarResponse": self = .cidBuddyListChangeAvatarResponse
    case "cidBuddyListPcLoginStatusNotify": self = .cidBuddyListPcLoginStatusNotify
    case "cidBuddyListRemoveSessionNotify": self = .cidBuddyListRemoveSessionNotify
    case "cidBuddyListDepartmentRequest": self = .cidBuddyListDepartmentRequest
    case "cidBuddyListDepartmentResponse": self = .cidBuddyListDepartmentResponse
    case "cidBuddyListAvatarChangedNotify": self = .cidBuddyListAvatarChangedNotify
    case "cidBuddyListChangeSignInfoRequest": self = .cidBuddyListChangeSignInfoRequest
    case "cidBuddyListChangeSignInfoResponse": self = .cidBuddyListChangeSignInfoResponse
    case "cidBuddyListSignInfoChangedNotify": self = .cidBuddyListSignInfoChangedNotify
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_BUDDY_LIST_RECENT_CONTACT_SESSION_REQUEST": self = .cidBuddyListRecentContactSessionRequest
    case "CID_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPONSE": self = .cidBuddyListRecentContactSessionResponse
    case "CID_BUDDY_LIST_STATUS_NOTIFY": self = .cidBuddyListStatusNotify
    case "CID_BUDDY_LIST_USER_INFO_REQUEST": self = .cidBuddyListUserInfoRequest
    case "CID_BUDDY_LIST_USER_INFO_RESPONSE": self = .cidBuddyListUserInfoResponse
    case "CID_BUDDY_LIST_REMOVE_SESSION_REQ": self = .cidBuddyListRemoveSessionReq
    case "CID_BUDDY_LIST_REMOVE_SESSION_RES": self = .cidBuddyListRemoveSessionRes
    case "CID_BUDDY_LIST_ALL_USER_REQUEST": self = .cidBuddyListAllUserRequest
    case "CID_BUDDY_LIST_ALL_USER_RESPONSE": self = .cidBuddyListAllUserResponse
    case "CID_BUDDY_LIST_USERS_STATUS_REQUEST": self = .cidBuddyListUsersStatusRequest
    case "CID_BUDDY_LIST_USERS_STATUS_RESPONSE": self = .cidBuddyListUsersStatusResponse
    case "CID_BUDDY_LIST_CHANGE_AVATAR_REQUEST": self = .cidBuddyListChangeAvatarRequest
    case "CID_BUDDY_LIST_CHANGE_AVATAR_RESPONSE": self = .cidBuddyListChangeAvatarResponse
    case "CID_BUDDY_LIST_PC_LOGIN_STATUS_NOTIFY": self = .cidBuddyListPcLoginStatusNotify
    case "CID_BUDDY_LIST_REMOVE_SESSION_NOTIFY": self = .cidBuddyListRemoveSessionNotify
    case "CID_BUDDY_LIST_DEPARTMENT_REQUEST": self = .cidBuddyListDepartmentRequest
    case "CID_BUDDY_LIST_DEPARTMENT_RESPONSE": self = .cidBuddyListDepartmentResponse
    case "CID_BUDDY_LIST_AVATAR_CHANGED_NOTIFY": self = .cidBuddyListAvatarChangedNotify
    case "CID_BUDDY_LIST_CHANGE_SIGN_INFO_REQUEST": self = .cidBuddyListChangeSignInfoRequest
    case "CID_BUDDY_LIST_CHANGE_SIGN_INFO_RESPONSE": self = .cidBuddyListChangeSignInfoResponse
    case "CID_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY": self = .cidBuddyListSignInfoChangedNotify
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_BUDDY_LIST_RECENT_CONTACT_SESSION_REQUEST": self = .cidBuddyListRecentContactSessionRequest
    case "CID_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPONSE": self = .cidBuddyListRecentContactSessionResponse
    case "CID_BUDDY_LIST_STATUS_NOTIFY": self = .cidBuddyListStatusNotify
    case "CID_BUDDY_LIST_USER_INFO_REQUEST": self = .cidBuddyListUserInfoRequest
    case "CID_BUDDY_LIST_USER_INFO_RESPONSE": self = .cidBuddyListUserInfoResponse
    case "CID_BUDDY_LIST_REMOVE_SESSION_REQ": self = .cidBuddyListRemoveSessionReq
    case "CID_BUDDY_LIST_REMOVE_SESSION_RES": self = .cidBuddyListRemoveSessionRes
    case "CID_BUDDY_LIST_ALL_USER_REQUEST": self = .cidBuddyListAllUserRequest
    case "CID_BUDDY_LIST_ALL_USER_RESPONSE": self = .cidBuddyListAllUserResponse
    case "CID_BUDDY_LIST_USERS_STATUS_REQUEST": self = .cidBuddyListUsersStatusRequest
    case "CID_BUDDY_LIST_USERS_STATUS_RESPONSE": self = .cidBuddyListUsersStatusResponse
    case "CID_BUDDY_LIST_CHANGE_AVATAR_REQUEST": self = .cidBuddyListChangeAvatarRequest
    case "CID_BUDDY_LIST_CHANGE_AVATAR_RESPONSE": self = .cidBuddyListChangeAvatarResponse
    case "CID_BUDDY_LIST_PC_LOGIN_STATUS_NOTIFY": self = .cidBuddyListPcLoginStatusNotify
    case "CID_BUDDY_LIST_REMOVE_SESSION_NOTIFY": self = .cidBuddyListRemoveSessionNotify
    case "CID_BUDDY_LIST_DEPARTMENT_REQUEST": self = .cidBuddyListDepartmentRequest
    case "CID_BUDDY_LIST_DEPARTMENT_RESPONSE": self = .cidBuddyListDepartmentResponse
    case "CID_BUDDY_LIST_AVATAR_CHANGED_NOTIFY": self = .cidBuddyListAvatarChangedNotify
    case "CID_BUDDY_LIST_CHANGE_SIGN_INFO_REQUEST": self = .cidBuddyListChangeSignInfoRequest
    case "CID_BUDDY_LIST_CHANGE_SIGN_INFO_RESPONSE": self = .cidBuddyListChangeSignInfoResponse
    case "CID_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY": self = .cidBuddyListSignInfoChangedNotify
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidBuddyListRecentContactSessionRequest: return 513
      case .cidBuddyListRecentContactSessionResponse: return 514
      case .cidBuddyListStatusNotify: return 515
      case .cidBuddyListUserInfoRequest: return 516
      case .cidBuddyListUserInfoResponse: return 517
      case .cidBuddyListRemoveSessionReq: return 518
      case .cidBuddyListRemoveSessionRes: return 519
      case .cidBuddyListAllUserRequest: return 520
      case .cidBuddyListAllUserResponse: return 521
      case .cidBuddyListUsersStatusRequest: return 522
      case .cidBuddyListUsersStatusResponse: return 523
      case .cidBuddyListChangeAvatarRequest: return 524
      case .cidBuddyListChangeAvatarResponse: return 525
      case .cidBuddyListPcLoginStatusNotify: return 526
      case .cidBuddyListRemoveSessionNotify: return 527
      case .cidBuddyListDepartmentRequest: return 528
      case .cidBuddyListDepartmentResponse: return 529
      case .cidBuddyListAvatarChangedNotify: return 530
      case .cidBuddyListChangeSignInfoRequest: return 531
      case .cidBuddyListChangeSignInfoResponse: return 532
      case .cidBuddyListSignInfoChangedNotify: return 533
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidBuddyListRecentContactSessionRequest: return "\"CID_BUDDY_LIST_RECENT_CONTACT_SESSION_REQUEST\""
      case .cidBuddyListRecentContactSessionResponse: return "\"CID_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPONSE\""
      case .cidBuddyListStatusNotify: return "\"CID_BUDDY_LIST_STATUS_NOTIFY\""
      case .cidBuddyListUserInfoRequest: return "\"CID_BUDDY_LIST_USER_INFO_REQUEST\""
      case .cidBuddyListUserInfoResponse: return "\"CID_BUDDY_LIST_USER_INFO_RESPONSE\""
      case .cidBuddyListRemoveSessionReq: return "\"CID_BUDDY_LIST_REMOVE_SESSION_REQ\""
      case .cidBuddyListRemoveSessionRes: return "\"CID_BUDDY_LIST_REMOVE_SESSION_RES\""
      case .cidBuddyListAllUserRequest: return "\"CID_BUDDY_LIST_ALL_USER_REQUEST\""
      case .cidBuddyListAllUserResponse: return "\"CID_BUDDY_LIST_ALL_USER_RESPONSE\""
      case .cidBuddyListUsersStatusRequest: return "\"CID_BUDDY_LIST_USERS_STATUS_REQUEST\""
      case .cidBuddyListUsersStatusResponse: return "\"CID_BUDDY_LIST_USERS_STATUS_RESPONSE\""
      case .cidBuddyListChangeAvatarRequest: return "\"CID_BUDDY_LIST_CHANGE_AVATAR_REQUEST\""
      case .cidBuddyListChangeAvatarResponse: return "\"CID_BUDDY_LIST_CHANGE_AVATAR_RESPONSE\""
      case .cidBuddyListPcLoginStatusNotify: return "\"CID_BUDDY_LIST_PC_LOGIN_STATUS_NOTIFY\""
      case .cidBuddyListRemoveSessionNotify: return "\"CID_BUDDY_LIST_REMOVE_SESSION_NOTIFY\""
      case .cidBuddyListDepartmentRequest: return "\"CID_BUDDY_LIST_DEPARTMENT_REQUEST\""
      case .cidBuddyListDepartmentResponse: return "\"CID_BUDDY_LIST_DEPARTMENT_RESPONSE\""
      case .cidBuddyListAvatarChangedNotify: return "\"CID_BUDDY_LIST_AVATAR_CHANGED_NOTIFY\""
      case .cidBuddyListChangeSignInfoRequest: return "\"CID_BUDDY_LIST_CHANGE_SIGN_INFO_REQUEST\""
      case .cidBuddyListChangeSignInfoResponse: return "\"CID_BUDDY_LIST_CHANGE_SIGN_INFO_RESPONSE\""
      case .cidBuddyListSignInfoChangedNotify: return "\"CID_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidBuddyListRecentContactSessionRequest: return ".cidBuddyListRecentContactSessionRequest"
      case .cidBuddyListRecentContactSessionResponse: return ".cidBuddyListRecentContactSessionResponse"
      case .cidBuddyListStatusNotify: return ".cidBuddyListStatusNotify"
      case .cidBuddyListUserInfoRequest: return ".cidBuddyListUserInfoRequest"
      case .cidBuddyListUserInfoResponse: return ".cidBuddyListUserInfoResponse"
      case .cidBuddyListRemoveSessionReq: return ".cidBuddyListRemoveSessionReq"
      case .cidBuddyListRemoveSessionRes: return ".cidBuddyListRemoveSessionRes"
      case .cidBuddyListAllUserRequest: return ".cidBuddyListAllUserRequest"
      case .cidBuddyListAllUserResponse: return ".cidBuddyListAllUserResponse"
      case .cidBuddyListUsersStatusRequest: return ".cidBuddyListUsersStatusRequest"
      case .cidBuddyListUsersStatusResponse: return ".cidBuddyListUsersStatusResponse"
      case .cidBuddyListChangeAvatarRequest: return ".cidBuddyListChangeAvatarRequest"
      case .cidBuddyListChangeAvatarResponse: return ".cidBuddyListChangeAvatarResponse"
      case .cidBuddyListPcLoginStatusNotify: return ".cidBuddyListPcLoginStatusNotify"
      case .cidBuddyListRemoveSessionNotify: return ".cidBuddyListRemoveSessionNotify"
      case .cidBuddyListDepartmentRequest: return ".cidBuddyListDepartmentRequest"
      case .cidBuddyListDepartmentResponse: return ".cidBuddyListDepartmentResponse"
      case .cidBuddyListAvatarChangedNotify: return ".cidBuddyListAvatarChangedNotify"
      case .cidBuddyListChangeSignInfoRequest: return ".cidBuddyListChangeSignInfoRequest"
      case .cidBuddyListChangeSignInfoResponse: return ".cidBuddyListChangeSignInfoResponse"
      case .cidBuddyListSignInfoChangedNotify: return ".cidBuddyListSignInfoChangedNotify"
      }
    }
  }

}

///   command id for msg
enum IM_BaseDefine_MessageCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case cidMsgData // = 769
  case cidMsgDataAck // = 770
  case cidMsgReadAck // = 771

  ///    已读消息通知
  case cidMsgReadNotify // = 772
  case cidMsgTimeRequest // = 773
  case cidMsgTimeResponse // = 774
  case cidMsgUnreadCntRequest // = 775
  case cidMsgUnreadCntResponse // = 776

  ///  获取指定队列消息
  case cidMsgListRequest // = 777
  case cidMsgListResponse // = 778
  case cidMsgGetLatestMsgIdReq // = 779
  case cidMsgGetLatestMsgIdRsp // = 780
  case cidMsgGetByMsgIdReq // = 781
  case cidMsgGetByMsgIdRes // = 782

  init() {
    self = .cidMsgData
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 769: self = .cidMsgData
    case 770: self = .cidMsgDataAck
    case 771: self = .cidMsgReadAck
    case 772: self = .cidMsgReadNotify
    case 773: self = .cidMsgTimeRequest
    case 774: self = .cidMsgTimeResponse
    case 775: self = .cidMsgUnreadCntRequest
    case 776: self = .cidMsgUnreadCntResponse
    case 777: self = .cidMsgListRequest
    case 778: self = .cidMsgListResponse
    case 779: self = .cidMsgGetLatestMsgIdReq
    case 780: self = .cidMsgGetLatestMsgIdRsp
    case 781: self = .cidMsgGetByMsgIdReq
    case 782: self = .cidMsgGetByMsgIdRes
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidMsgData": self = .cidMsgData
    case "cidMsgDataAck": self = .cidMsgDataAck
    case "cidMsgReadAck": self = .cidMsgReadAck
    case "cidMsgReadNotify": self = .cidMsgReadNotify
    case "cidMsgTimeRequest": self = .cidMsgTimeRequest
    case "cidMsgTimeResponse": self = .cidMsgTimeResponse
    case "cidMsgUnreadCntRequest": self = .cidMsgUnreadCntRequest
    case "cidMsgUnreadCntResponse": self = .cidMsgUnreadCntResponse
    case "cidMsgListRequest": self = .cidMsgListRequest
    case "cidMsgListResponse": self = .cidMsgListResponse
    case "cidMsgGetLatestMsgIdReq": self = .cidMsgGetLatestMsgIdReq
    case "cidMsgGetLatestMsgIdRsp": self = .cidMsgGetLatestMsgIdRsp
    case "cidMsgGetByMsgIdReq": self = .cidMsgGetByMsgIdReq
    case "cidMsgGetByMsgIdRes": self = .cidMsgGetByMsgIdRes
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_MSG_DATA": self = .cidMsgData
    case "CID_MSG_DATA_ACK": self = .cidMsgDataAck
    case "CID_MSG_READ_ACK": self = .cidMsgReadAck
    case "CID_MSG_READ_NOTIFY": self = .cidMsgReadNotify
    case "CID_MSG_TIME_REQUEST": self = .cidMsgTimeRequest
    case "CID_MSG_TIME_RESPONSE": self = .cidMsgTimeResponse
    case "CID_MSG_UNREAD_CNT_REQUEST": self = .cidMsgUnreadCntRequest
    case "CID_MSG_UNREAD_CNT_RESPONSE": self = .cidMsgUnreadCntResponse
    case "CID_MSG_LIST_REQUEST": self = .cidMsgListRequest
    case "CID_MSG_LIST_RESPONSE": self = .cidMsgListResponse
    case "CID_MSG_GET_LATEST_MSG_ID_REQ": self = .cidMsgGetLatestMsgIdReq
    case "CID_MSG_GET_LATEST_MSG_ID_RSP": self = .cidMsgGetLatestMsgIdRsp
    case "CID_MSG_GET_BY_MSG_ID_REQ": self = .cidMsgGetByMsgIdReq
    case "CID_MSG_GET_BY_MSG_ID_RES": self = .cidMsgGetByMsgIdRes
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_MSG_DATA": self = .cidMsgData
    case "CID_MSG_DATA_ACK": self = .cidMsgDataAck
    case "CID_MSG_READ_ACK": self = .cidMsgReadAck
    case "CID_MSG_READ_NOTIFY": self = .cidMsgReadNotify
    case "CID_MSG_TIME_REQUEST": self = .cidMsgTimeRequest
    case "CID_MSG_TIME_RESPONSE": self = .cidMsgTimeResponse
    case "CID_MSG_UNREAD_CNT_REQUEST": self = .cidMsgUnreadCntRequest
    case "CID_MSG_UNREAD_CNT_RESPONSE": self = .cidMsgUnreadCntResponse
    case "CID_MSG_LIST_REQUEST": self = .cidMsgListRequest
    case "CID_MSG_LIST_RESPONSE": self = .cidMsgListResponse
    case "CID_MSG_GET_LATEST_MSG_ID_REQ": self = .cidMsgGetLatestMsgIdReq
    case "CID_MSG_GET_LATEST_MSG_ID_RSP": self = .cidMsgGetLatestMsgIdRsp
    case "CID_MSG_GET_BY_MSG_ID_REQ": self = .cidMsgGetByMsgIdReq
    case "CID_MSG_GET_BY_MSG_ID_RES": self = .cidMsgGetByMsgIdRes
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidMsgData: return 769
      case .cidMsgDataAck: return 770
      case .cidMsgReadAck: return 771
      case .cidMsgReadNotify: return 772
      case .cidMsgTimeRequest: return 773
      case .cidMsgTimeResponse: return 774
      case .cidMsgUnreadCntRequest: return 775
      case .cidMsgUnreadCntResponse: return 776
      case .cidMsgListRequest: return 777
      case .cidMsgListResponse: return 778
      case .cidMsgGetLatestMsgIdReq: return 779
      case .cidMsgGetLatestMsgIdRsp: return 780
      case .cidMsgGetByMsgIdReq: return 781
      case .cidMsgGetByMsgIdRes: return 782
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidMsgData: return "\"CID_MSG_DATA\""
      case .cidMsgDataAck: return "\"CID_MSG_DATA_ACK\""
      case .cidMsgReadAck: return "\"CID_MSG_READ_ACK\""
      case .cidMsgReadNotify: return "\"CID_MSG_READ_NOTIFY\""
      case .cidMsgTimeRequest: return "\"CID_MSG_TIME_REQUEST\""
      case .cidMsgTimeResponse: return "\"CID_MSG_TIME_RESPONSE\""
      case .cidMsgUnreadCntRequest: return "\"CID_MSG_UNREAD_CNT_REQUEST\""
      case .cidMsgUnreadCntResponse: return "\"CID_MSG_UNREAD_CNT_RESPONSE\""
      case .cidMsgListRequest: return "\"CID_MSG_LIST_REQUEST\""
      case .cidMsgListResponse: return "\"CID_MSG_LIST_RESPONSE\""
      case .cidMsgGetLatestMsgIdReq: return "\"CID_MSG_GET_LATEST_MSG_ID_REQ\""
      case .cidMsgGetLatestMsgIdRsp: return "\"CID_MSG_GET_LATEST_MSG_ID_RSP\""
      case .cidMsgGetByMsgIdReq: return "\"CID_MSG_GET_BY_MSG_ID_REQ\""
      case .cidMsgGetByMsgIdRes: return "\"CID_MSG_GET_BY_MSG_ID_RES\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidMsgData: return ".cidMsgData"
      case .cidMsgDataAck: return ".cidMsgDataAck"
      case .cidMsgReadAck: return ".cidMsgReadAck"
      case .cidMsgReadNotify: return ".cidMsgReadNotify"
      case .cidMsgTimeRequest: return ".cidMsgTimeRequest"
      case .cidMsgTimeResponse: return ".cidMsgTimeResponse"
      case .cidMsgUnreadCntRequest: return ".cidMsgUnreadCntRequest"
      case .cidMsgUnreadCntResponse: return ".cidMsgUnreadCntResponse"
      case .cidMsgListRequest: return ".cidMsgListRequest"
      case .cidMsgListResponse: return ".cidMsgListResponse"
      case .cidMsgGetLatestMsgIdReq: return ".cidMsgGetLatestMsgIdReq"
      case .cidMsgGetLatestMsgIdRsp: return ".cidMsgGetLatestMsgIdRsp"
      case .cidMsgGetByMsgIdReq: return ".cidMsgGetByMsgIdReq"
      case .cidMsgGetByMsgIdRes: return ".cidMsgGetByMsgIdRes"
      }
    }
  }

}

///   command id for group message
enum IM_BaseDefine_GroupCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case cidGroupNormalListRequest // = 1025
  case cidGroupNormalListResponse // = 1026
  case cidGroupInfoRequest // = 1027
  case cidGroupInfoResponse // = 1028
  case cidGroupCreateRequest // = 1029
  case cidGroupCreateResponse // = 1030
  case cidGroupChangeMemberRequest // = 1031
  case cidGroupChangeMemberResponse // = 1032
  case cidGroupShieldGroupRequest // = 1033
  case cidGroupShieldGroupResponse // = 1034
  case cidGroupChangeMemberNotify // = 1035

  init() {
    self = .cidGroupNormalListRequest
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1025: self = .cidGroupNormalListRequest
    case 1026: self = .cidGroupNormalListResponse
    case 1027: self = .cidGroupInfoRequest
    case 1028: self = .cidGroupInfoResponse
    case 1029: self = .cidGroupCreateRequest
    case 1030: self = .cidGroupCreateResponse
    case 1031: self = .cidGroupChangeMemberRequest
    case 1032: self = .cidGroupChangeMemberResponse
    case 1033: self = .cidGroupShieldGroupRequest
    case 1034: self = .cidGroupShieldGroupResponse
    case 1035: self = .cidGroupChangeMemberNotify
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidGroupNormalListRequest": self = .cidGroupNormalListRequest
    case "cidGroupNormalListResponse": self = .cidGroupNormalListResponse
    case "cidGroupInfoRequest": self = .cidGroupInfoRequest
    case "cidGroupInfoResponse": self = .cidGroupInfoResponse
    case "cidGroupCreateRequest": self = .cidGroupCreateRequest
    case "cidGroupCreateResponse": self = .cidGroupCreateResponse
    case "cidGroupChangeMemberRequest": self = .cidGroupChangeMemberRequest
    case "cidGroupChangeMemberResponse": self = .cidGroupChangeMemberResponse
    case "cidGroupShieldGroupRequest": self = .cidGroupShieldGroupRequest
    case "cidGroupShieldGroupResponse": self = .cidGroupShieldGroupResponse
    case "cidGroupChangeMemberNotify": self = .cidGroupChangeMemberNotify
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_GROUP_NORMAL_LIST_REQUEST": self = .cidGroupNormalListRequest
    case "CID_GROUP_NORMAL_LIST_RESPONSE": self = .cidGroupNormalListResponse
    case "CID_GROUP_INFO_REQUEST": self = .cidGroupInfoRequest
    case "CID_GROUP_INFO_RESPONSE": self = .cidGroupInfoResponse
    case "CID_GROUP_CREATE_REQUEST": self = .cidGroupCreateRequest
    case "CID_GROUP_CREATE_RESPONSE": self = .cidGroupCreateResponse
    case "CID_GROUP_CHANGE_MEMBER_REQUEST": self = .cidGroupChangeMemberRequest
    case "CID_GROUP_CHANGE_MEMBER_RESPONSE": self = .cidGroupChangeMemberResponse
    case "CID_GROUP_SHIELD_GROUP_REQUEST": self = .cidGroupShieldGroupRequest
    case "CID_GROUP_SHIELD_GROUP_RESPONSE": self = .cidGroupShieldGroupResponse
    case "CID_GROUP_CHANGE_MEMBER_NOTIFY": self = .cidGroupChangeMemberNotify
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_GROUP_NORMAL_LIST_REQUEST": self = .cidGroupNormalListRequest
    case "CID_GROUP_NORMAL_LIST_RESPONSE": self = .cidGroupNormalListResponse
    case "CID_GROUP_INFO_REQUEST": self = .cidGroupInfoRequest
    case "CID_GROUP_INFO_RESPONSE": self = .cidGroupInfoResponse
    case "CID_GROUP_CREATE_REQUEST": self = .cidGroupCreateRequest
    case "CID_GROUP_CREATE_RESPONSE": self = .cidGroupCreateResponse
    case "CID_GROUP_CHANGE_MEMBER_REQUEST": self = .cidGroupChangeMemberRequest
    case "CID_GROUP_CHANGE_MEMBER_RESPONSE": self = .cidGroupChangeMemberResponse
    case "CID_GROUP_SHIELD_GROUP_REQUEST": self = .cidGroupShieldGroupRequest
    case "CID_GROUP_SHIELD_GROUP_RESPONSE": self = .cidGroupShieldGroupResponse
    case "CID_GROUP_CHANGE_MEMBER_NOTIFY": self = .cidGroupChangeMemberNotify
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidGroupNormalListRequest: return 1025
      case .cidGroupNormalListResponse: return 1026
      case .cidGroupInfoRequest: return 1027
      case .cidGroupInfoResponse: return 1028
      case .cidGroupCreateRequest: return 1029
      case .cidGroupCreateResponse: return 1030
      case .cidGroupChangeMemberRequest: return 1031
      case .cidGroupChangeMemberResponse: return 1032
      case .cidGroupShieldGroupRequest: return 1033
      case .cidGroupShieldGroupResponse: return 1034
      case .cidGroupChangeMemberNotify: return 1035
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidGroupNormalListRequest: return "\"CID_GROUP_NORMAL_LIST_REQUEST\""
      case .cidGroupNormalListResponse: return "\"CID_GROUP_NORMAL_LIST_RESPONSE\""
      case .cidGroupInfoRequest: return "\"CID_GROUP_INFO_REQUEST\""
      case .cidGroupInfoResponse: return "\"CID_GROUP_INFO_RESPONSE\""
      case .cidGroupCreateRequest: return "\"CID_GROUP_CREATE_REQUEST\""
      case .cidGroupCreateResponse: return "\"CID_GROUP_CREATE_RESPONSE\""
      case .cidGroupChangeMemberRequest: return "\"CID_GROUP_CHANGE_MEMBER_REQUEST\""
      case .cidGroupChangeMemberResponse: return "\"CID_GROUP_CHANGE_MEMBER_RESPONSE\""
      case .cidGroupShieldGroupRequest: return "\"CID_GROUP_SHIELD_GROUP_REQUEST\""
      case .cidGroupShieldGroupResponse: return "\"CID_GROUP_SHIELD_GROUP_RESPONSE\""
      case .cidGroupChangeMemberNotify: return "\"CID_GROUP_CHANGE_MEMBER_NOTIFY\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidGroupNormalListRequest: return ".cidGroupNormalListRequest"
      case .cidGroupNormalListResponse: return ".cidGroupNormalListResponse"
      case .cidGroupInfoRequest: return ".cidGroupInfoRequest"
      case .cidGroupInfoResponse: return ".cidGroupInfoResponse"
      case .cidGroupCreateRequest: return ".cidGroupCreateRequest"
      case .cidGroupCreateResponse: return ".cidGroupCreateResponse"
      case .cidGroupChangeMemberRequest: return ".cidGroupChangeMemberRequest"
      case .cidGroupChangeMemberResponse: return ".cidGroupChangeMemberResponse"
      case .cidGroupShieldGroupRequest: return ".cidGroupShieldGroupRequest"
      case .cidGroupShieldGroupResponse: return ".cidGroupShieldGroupResponse"
      case .cidGroupChangeMemberNotify: return ".cidGroupChangeMemberNotify"
      }
    }
  }

}

enum IM_BaseDefine_FileCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int

  ///   sender/receiver need to login to
  case cidFileLoginReq // = 1281

  ///   login success or failure
  case cidFileLoginRes // = 1282
  case cidFileState // = 1283
  case cidFilePullDataReq // = 1284
  case cidFilePullDataRsp // = 1285

  ///   To MsgServer
  case cidFileRequest // = 1286

  ///   receiver -> sender
  case cidFileResponse // = 1287
  case cidFileNotify // = 1288
  case cidFileHasOfflineReq // = 1289
  case cidFileHasOfflineRes // = 1290
  case cidFileAddOfflineReq // = 1291
  case cidFileDelOfflineReq // = 1292

  init() {
    self = .cidFileLoginReq
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1281: self = .cidFileLoginReq
    case 1282: self = .cidFileLoginRes
    case 1283: self = .cidFileState
    case 1284: self = .cidFilePullDataReq
    case 1285: self = .cidFilePullDataRsp
    case 1286: self = .cidFileRequest
    case 1287: self = .cidFileResponse
    case 1288: self = .cidFileNotify
    case 1289: self = .cidFileHasOfflineReq
    case 1290: self = .cidFileHasOfflineRes
    case 1291: self = .cidFileAddOfflineReq
    case 1292: self = .cidFileDelOfflineReq
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidFileLoginReq": self = .cidFileLoginReq
    case "cidFileLoginRes": self = .cidFileLoginRes
    case "cidFileState": self = .cidFileState
    case "cidFilePullDataReq": self = .cidFilePullDataReq
    case "cidFilePullDataRsp": self = .cidFilePullDataRsp
    case "cidFileRequest": self = .cidFileRequest
    case "cidFileResponse": self = .cidFileResponse
    case "cidFileNotify": self = .cidFileNotify
    case "cidFileHasOfflineReq": self = .cidFileHasOfflineReq
    case "cidFileHasOfflineRes": self = .cidFileHasOfflineRes
    case "cidFileAddOfflineReq": self = .cidFileAddOfflineReq
    case "cidFileDelOfflineReq": self = .cidFileDelOfflineReq
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_FILE_LOGIN_REQ": self = .cidFileLoginReq
    case "CID_FILE_LOGIN_RES": self = .cidFileLoginRes
    case "CID_FILE_STATE": self = .cidFileState
    case "CID_FILE_PULL_DATA_REQ": self = .cidFilePullDataReq
    case "CID_FILE_PULL_DATA_RSP": self = .cidFilePullDataRsp
    case "CID_FILE_REQUEST": self = .cidFileRequest
    case "CID_FILE_RESPONSE": self = .cidFileResponse
    case "CID_FILE_NOTIFY": self = .cidFileNotify
    case "CID_FILE_HAS_OFFLINE_REQ": self = .cidFileHasOfflineReq
    case "CID_FILE_HAS_OFFLINE_RES": self = .cidFileHasOfflineRes
    case "CID_FILE_ADD_OFFLINE_REQ": self = .cidFileAddOfflineReq
    case "CID_FILE_DEL_OFFLINE_REQ": self = .cidFileDelOfflineReq
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_FILE_LOGIN_REQ": self = .cidFileLoginReq
    case "CID_FILE_LOGIN_RES": self = .cidFileLoginRes
    case "CID_FILE_STATE": self = .cidFileState
    case "CID_FILE_PULL_DATA_REQ": self = .cidFilePullDataReq
    case "CID_FILE_PULL_DATA_RSP": self = .cidFilePullDataRsp
    case "CID_FILE_REQUEST": self = .cidFileRequest
    case "CID_FILE_RESPONSE": self = .cidFileResponse
    case "CID_FILE_NOTIFY": self = .cidFileNotify
    case "CID_FILE_HAS_OFFLINE_REQ": self = .cidFileHasOfflineReq
    case "CID_FILE_HAS_OFFLINE_RES": self = .cidFileHasOfflineRes
    case "CID_FILE_ADD_OFFLINE_REQ": self = .cidFileAddOfflineReq
    case "CID_FILE_DEL_OFFLINE_REQ": self = .cidFileDelOfflineReq
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidFileLoginReq: return 1281
      case .cidFileLoginRes: return 1282
      case .cidFileState: return 1283
      case .cidFilePullDataReq: return 1284
      case .cidFilePullDataRsp: return 1285
      case .cidFileRequest: return 1286
      case .cidFileResponse: return 1287
      case .cidFileNotify: return 1288
      case .cidFileHasOfflineReq: return 1289
      case .cidFileHasOfflineRes: return 1290
      case .cidFileAddOfflineReq: return 1291
      case .cidFileDelOfflineReq: return 1292
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidFileLoginReq: return "\"CID_FILE_LOGIN_REQ\""
      case .cidFileLoginRes: return "\"CID_FILE_LOGIN_RES\""
      case .cidFileState: return "\"CID_FILE_STATE\""
      case .cidFilePullDataReq: return "\"CID_FILE_PULL_DATA_REQ\""
      case .cidFilePullDataRsp: return "\"CID_FILE_PULL_DATA_RSP\""
      case .cidFileRequest: return "\"CID_FILE_REQUEST\""
      case .cidFileResponse: return "\"CID_FILE_RESPONSE\""
      case .cidFileNotify: return "\"CID_FILE_NOTIFY\""
      case .cidFileHasOfflineReq: return "\"CID_FILE_HAS_OFFLINE_REQ\""
      case .cidFileHasOfflineRes: return "\"CID_FILE_HAS_OFFLINE_RES\""
      case .cidFileAddOfflineReq: return "\"CID_FILE_ADD_OFFLINE_REQ\""
      case .cidFileDelOfflineReq: return "\"CID_FILE_DEL_OFFLINE_REQ\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidFileLoginReq: return ".cidFileLoginReq"
      case .cidFileLoginRes: return ".cidFileLoginRes"
      case .cidFileState: return ".cidFileState"
      case .cidFilePullDataReq: return ".cidFilePullDataReq"
      case .cidFilePullDataRsp: return ".cidFilePullDataRsp"
      case .cidFileRequest: return ".cidFileRequest"
      case .cidFileResponse: return ".cidFileResponse"
      case .cidFileNotify: return ".cidFileNotify"
      case .cidFileHasOfflineReq: return ".cidFileHasOfflineReq"
      case .cidFileHasOfflineRes: return ".cidFileHasOfflineRes"
      case .cidFileAddOfflineReq: return ".cidFileAddOfflineReq"
      case .cidFileDelOfflineReq: return ".cidFileDelOfflineReq"
      }
    }
  }

}

///   command id for switch service
enum IM_BaseDefine_SwitchServiceCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case cidSwitchP2PCmd // = 1537

  init() {
    self = .cidSwitchP2PCmd
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1537: self = .cidSwitchP2PCmd
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidSwitchP2PCmd": self = .cidSwitchP2PCmd
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_SWITCH_P2P_CMD": self = .cidSwitchP2PCmd
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_SWITCH_P2P_CMD": self = .cidSwitchP2PCmd
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidSwitchP2PCmd: return 1537
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidSwitchP2PCmd: return "\"CID_SWITCH_P2P_CMD\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidSwitchP2PCmd: return ".cidSwitchP2PCmd"
      }
    }
  }

}

enum IM_BaseDefine_OtherCmdID: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case cidOtherHeartbeat // = 1793
  case cidOtherStopRecvPacket // = 1794
  case cidOtherValidateReq // = 1795
  case cidOtherValidateRsp // = 1796
  case cidOtherGetDeviceTokenReq // = 1797
  case cidOtherGetDeviceTokenRsp // = 1798
  case cidOtherRoleSet // = 1799
  case cidOtherOnlineUserInfo // = 1800
  case cidOtherMsgServInfo // = 1801
  case cidOtherUserStatusUpdate // = 1802
  case cidOtherUserCntUpdate // = 1803
  case cidOtherServerKickUser // = 1805
  case cidOtherLoginStatusNotify // = 1806
  case cidOtherPushToUserReq // = 1807
  case cidOtherPushToUserRsp // = 1808
  case cidOtherGetShieldReq // = 1809
  case cidOtherGetShieldRsp // = 1810
  case cidOtherFileTransferReq // = 1841
  case cidOtherFileTransferRsp // = 1842
  case cidOtherFileServerIpReq // = 1843
  case cidOtherFileServerIpRsp // = 1844

  init() {
    self = .cidOtherHeartbeat
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1793: self = .cidOtherHeartbeat
    case 1794: self = .cidOtherStopRecvPacket
    case 1795: self = .cidOtherValidateReq
    case 1796: self = .cidOtherValidateRsp
    case 1797: self = .cidOtherGetDeviceTokenReq
    case 1798: self = .cidOtherGetDeviceTokenRsp
    case 1799: self = .cidOtherRoleSet
    case 1800: self = .cidOtherOnlineUserInfo
    case 1801: self = .cidOtherMsgServInfo
    case 1802: self = .cidOtherUserStatusUpdate
    case 1803: self = .cidOtherUserCntUpdate
    case 1805: self = .cidOtherServerKickUser
    case 1806: self = .cidOtherLoginStatusNotify
    case 1807: self = .cidOtherPushToUserReq
    case 1808: self = .cidOtherPushToUserRsp
    case 1809: self = .cidOtherGetShieldReq
    case 1810: self = .cidOtherGetShieldRsp
    case 1841: self = .cidOtherFileTransferReq
    case 1842: self = .cidOtherFileTransferRsp
    case 1843: self = .cidOtherFileServerIpReq
    case 1844: self = .cidOtherFileServerIpRsp
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "cidOtherHeartbeat": self = .cidOtherHeartbeat
    case "cidOtherStopRecvPacket": self = .cidOtherStopRecvPacket
    case "cidOtherValidateReq": self = .cidOtherValidateReq
    case "cidOtherValidateRsp": self = .cidOtherValidateRsp
    case "cidOtherGetDeviceTokenReq": self = .cidOtherGetDeviceTokenReq
    case "cidOtherGetDeviceTokenRsp": self = .cidOtherGetDeviceTokenRsp
    case "cidOtherRoleSet": self = .cidOtherRoleSet
    case "cidOtherOnlineUserInfo": self = .cidOtherOnlineUserInfo
    case "cidOtherMsgServInfo": self = .cidOtherMsgServInfo
    case "cidOtherUserStatusUpdate": self = .cidOtherUserStatusUpdate
    case "cidOtherUserCntUpdate": self = .cidOtherUserCntUpdate
    case "cidOtherServerKickUser": self = .cidOtherServerKickUser
    case "cidOtherLoginStatusNotify": self = .cidOtherLoginStatusNotify
    case "cidOtherPushToUserReq": self = .cidOtherPushToUserReq
    case "cidOtherPushToUserRsp": self = .cidOtherPushToUserRsp
    case "cidOtherGetShieldReq": self = .cidOtherGetShieldReq
    case "cidOtherGetShieldRsp": self = .cidOtherGetShieldRsp
    case "cidOtherFileTransferReq": self = .cidOtherFileTransferReq
    case "cidOtherFileTransferRsp": self = .cidOtherFileTransferRsp
    case "cidOtherFileServerIpReq": self = .cidOtherFileServerIpReq
    case "cidOtherFileServerIpRsp": self = .cidOtherFileServerIpRsp
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CID_OTHER_HEARTBEAT": self = .cidOtherHeartbeat
    case "CID_OTHER_STOP_RECV_PACKET": self = .cidOtherStopRecvPacket
    case "CID_OTHER_VALIDATE_REQ": self = .cidOtherValidateReq
    case "CID_OTHER_VALIDATE_RSP": self = .cidOtherValidateRsp
    case "CID_OTHER_GET_DEVICE_TOKEN_REQ": self = .cidOtherGetDeviceTokenReq
    case "CID_OTHER_GET_DEVICE_TOKEN_RSP": self = .cidOtherGetDeviceTokenRsp
    case "CID_OTHER_ROLE_SET": self = .cidOtherRoleSet
    case "CID_OTHER_ONLINE_USER_INFO": self = .cidOtherOnlineUserInfo
    case "CID_OTHER_MSG_SERV_INFO": self = .cidOtherMsgServInfo
    case "CID_OTHER_USER_STATUS_UPDATE": self = .cidOtherUserStatusUpdate
    case "CID_OTHER_USER_CNT_UPDATE": self = .cidOtherUserCntUpdate
    case "CID_OTHER_SERVER_KICK_USER": self = .cidOtherServerKickUser
    case "CID_OTHER_LOGIN_STATUS_NOTIFY": self = .cidOtherLoginStatusNotify
    case "CID_OTHER_PUSH_TO_USER_REQ": self = .cidOtherPushToUserReq
    case "CID_OTHER_PUSH_TO_USER_RSP": self = .cidOtherPushToUserRsp
    case "CID_OTHER_GET_SHIELD_REQ": self = .cidOtherGetShieldReq
    case "CID_OTHER_GET_SHIELD_RSP": self = .cidOtherGetShieldRsp
    case "CID_OTHER_FILE_TRANSFER_REQ": self = .cidOtherFileTransferReq
    case "CID_OTHER_FILE_TRANSFER_RSP": self = .cidOtherFileTransferRsp
    case "CID_OTHER_FILE_SERVER_IP_REQ": self = .cidOtherFileServerIpReq
    case "CID_OTHER_FILE_SERVER_IP_RSP": self = .cidOtherFileServerIpRsp
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CID_OTHER_HEARTBEAT": self = .cidOtherHeartbeat
    case "CID_OTHER_STOP_RECV_PACKET": self = .cidOtherStopRecvPacket
    case "CID_OTHER_VALIDATE_REQ": self = .cidOtherValidateReq
    case "CID_OTHER_VALIDATE_RSP": self = .cidOtherValidateRsp
    case "CID_OTHER_GET_DEVICE_TOKEN_REQ": self = .cidOtherGetDeviceTokenReq
    case "CID_OTHER_GET_DEVICE_TOKEN_RSP": self = .cidOtherGetDeviceTokenRsp
    case "CID_OTHER_ROLE_SET": self = .cidOtherRoleSet
    case "CID_OTHER_ONLINE_USER_INFO": self = .cidOtherOnlineUserInfo
    case "CID_OTHER_MSG_SERV_INFO": self = .cidOtherMsgServInfo
    case "CID_OTHER_USER_STATUS_UPDATE": self = .cidOtherUserStatusUpdate
    case "CID_OTHER_USER_CNT_UPDATE": self = .cidOtherUserCntUpdate
    case "CID_OTHER_SERVER_KICK_USER": self = .cidOtherServerKickUser
    case "CID_OTHER_LOGIN_STATUS_NOTIFY": self = .cidOtherLoginStatusNotify
    case "CID_OTHER_PUSH_TO_USER_REQ": self = .cidOtherPushToUserReq
    case "CID_OTHER_PUSH_TO_USER_RSP": self = .cidOtherPushToUserRsp
    case "CID_OTHER_GET_SHIELD_REQ": self = .cidOtherGetShieldReq
    case "CID_OTHER_GET_SHIELD_RSP": self = .cidOtherGetShieldRsp
    case "CID_OTHER_FILE_TRANSFER_REQ": self = .cidOtherFileTransferReq
    case "CID_OTHER_FILE_TRANSFER_RSP": self = .cidOtherFileTransferRsp
    case "CID_OTHER_FILE_SERVER_IP_REQ": self = .cidOtherFileServerIpReq
    case "CID_OTHER_FILE_SERVER_IP_RSP": self = .cidOtherFileServerIpRsp
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .cidOtherHeartbeat: return 1793
      case .cidOtherStopRecvPacket: return 1794
      case .cidOtherValidateReq: return 1795
      case .cidOtherValidateRsp: return 1796
      case .cidOtherGetDeviceTokenReq: return 1797
      case .cidOtherGetDeviceTokenRsp: return 1798
      case .cidOtherRoleSet: return 1799
      case .cidOtherOnlineUserInfo: return 1800
      case .cidOtherMsgServInfo: return 1801
      case .cidOtherUserStatusUpdate: return 1802
      case .cidOtherUserCntUpdate: return 1803
      case .cidOtherServerKickUser: return 1805
      case .cidOtherLoginStatusNotify: return 1806
      case .cidOtherPushToUserReq: return 1807
      case .cidOtherPushToUserRsp: return 1808
      case .cidOtherGetShieldReq: return 1809
      case .cidOtherGetShieldRsp: return 1810
      case .cidOtherFileTransferReq: return 1841
      case .cidOtherFileTransferRsp: return 1842
      case .cidOtherFileServerIpReq: return 1843
      case .cidOtherFileServerIpRsp: return 1844
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .cidOtherHeartbeat: return "\"CID_OTHER_HEARTBEAT\""
      case .cidOtherStopRecvPacket: return "\"CID_OTHER_STOP_RECV_PACKET\""
      case .cidOtherValidateReq: return "\"CID_OTHER_VALIDATE_REQ\""
      case .cidOtherValidateRsp: return "\"CID_OTHER_VALIDATE_RSP\""
      case .cidOtherGetDeviceTokenReq: return "\"CID_OTHER_GET_DEVICE_TOKEN_REQ\""
      case .cidOtherGetDeviceTokenRsp: return "\"CID_OTHER_GET_DEVICE_TOKEN_RSP\""
      case .cidOtherRoleSet: return "\"CID_OTHER_ROLE_SET\""
      case .cidOtherOnlineUserInfo: return "\"CID_OTHER_ONLINE_USER_INFO\""
      case .cidOtherMsgServInfo: return "\"CID_OTHER_MSG_SERV_INFO\""
      case .cidOtherUserStatusUpdate: return "\"CID_OTHER_USER_STATUS_UPDATE\""
      case .cidOtherUserCntUpdate: return "\"CID_OTHER_USER_CNT_UPDATE\""
      case .cidOtherServerKickUser: return "\"CID_OTHER_SERVER_KICK_USER\""
      case .cidOtherLoginStatusNotify: return "\"CID_OTHER_LOGIN_STATUS_NOTIFY\""
      case .cidOtherPushToUserReq: return "\"CID_OTHER_PUSH_TO_USER_REQ\""
      case .cidOtherPushToUserRsp: return "\"CID_OTHER_PUSH_TO_USER_RSP\""
      case .cidOtherGetShieldReq: return "\"CID_OTHER_GET_SHIELD_REQ\""
      case .cidOtherGetShieldRsp: return "\"CID_OTHER_GET_SHIELD_RSP\""
      case .cidOtherFileTransferReq: return "\"CID_OTHER_FILE_TRANSFER_REQ\""
      case .cidOtherFileTransferRsp: return "\"CID_OTHER_FILE_TRANSFER_RSP\""
      case .cidOtherFileServerIpReq: return "\"CID_OTHER_FILE_SERVER_IP_REQ\""
      case .cidOtherFileServerIpRsp: return "\"CID_OTHER_FILE_SERVER_IP_RSP\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .cidOtherHeartbeat: return ".cidOtherHeartbeat"
      case .cidOtherStopRecvPacket: return ".cidOtherStopRecvPacket"
      case .cidOtherValidateReq: return ".cidOtherValidateReq"
      case .cidOtherValidateRsp: return ".cidOtherValidateRsp"
      case .cidOtherGetDeviceTokenReq: return ".cidOtherGetDeviceTokenReq"
      case .cidOtherGetDeviceTokenRsp: return ".cidOtherGetDeviceTokenRsp"
      case .cidOtherRoleSet: return ".cidOtherRoleSet"
      case .cidOtherOnlineUserInfo: return ".cidOtherOnlineUserInfo"
      case .cidOtherMsgServInfo: return ".cidOtherMsgServInfo"
      case .cidOtherUserStatusUpdate: return ".cidOtherUserStatusUpdate"
      case .cidOtherUserCntUpdate: return ".cidOtherUserCntUpdate"
      case .cidOtherServerKickUser: return ".cidOtherServerKickUser"
      case .cidOtherLoginStatusNotify: return ".cidOtherLoginStatusNotify"
      case .cidOtherPushToUserReq: return ".cidOtherPushToUserReq"
      case .cidOtherPushToUserRsp: return ".cidOtherPushToUserRsp"
      case .cidOtherGetShieldReq: return ".cidOtherGetShieldReq"
      case .cidOtherGetShieldRsp: return ".cidOtherGetShieldRsp"
      case .cidOtherFileTransferReq: return ".cidOtherFileTransferReq"
      case .cidOtherFileTransferRsp: return ".cidOtherFileTransferRsp"
      case .cidOtherFileServerIpReq: return ".cidOtherFileServerIpReq"
      case .cidOtherFileServerIpRsp: return ".cidOtherFileServerIpRsp"
      }
    }
  }

}

enum IM_BaseDefine_ResultType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case refuseReasonNone // = 0
  case refuseReasonNoMsgServer // = 1
  case refuseReasonMsgServerFull // = 2
  case refuseReasonNoDbServer // = 3
  case refuseReasonNoLoginServer // = 4
  case refuseReasonNoRouteServer // = 5
  case refuseReasonDbValidateFailed // = 6
  case refuseReasonVersionTooOld // = 7

  init() {
    self = .refuseReasonNone
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .refuseReasonNone
    case 1: self = .refuseReasonNoMsgServer
    case 2: self = .refuseReasonMsgServerFull
    case 3: self = .refuseReasonNoDbServer
    case 4: self = .refuseReasonNoLoginServer
    case 5: self = .refuseReasonNoRouteServer
    case 6: self = .refuseReasonDbValidateFailed
    case 7: self = .refuseReasonVersionTooOld
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "refuseReasonNone": self = .refuseReasonNone
    case "refuseReasonNoMsgServer": self = .refuseReasonNoMsgServer
    case "refuseReasonMsgServerFull": self = .refuseReasonMsgServerFull
    case "refuseReasonNoDbServer": self = .refuseReasonNoDbServer
    case "refuseReasonNoLoginServer": self = .refuseReasonNoLoginServer
    case "refuseReasonNoRouteServer": self = .refuseReasonNoRouteServer
    case "refuseReasonDbValidateFailed": self = .refuseReasonDbValidateFailed
    case "refuseReasonVersionTooOld": self = .refuseReasonVersionTooOld
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "REFUSE_REASON_NONE": self = .refuseReasonNone
    case "REFUSE_REASON_NO_MSG_SERVER": self = .refuseReasonNoMsgServer
    case "REFUSE_REASON_MSG_SERVER_FULL": self = .refuseReasonMsgServerFull
    case "REFUSE_REASON_NO_DB_SERVER": self = .refuseReasonNoDbServer
    case "REFUSE_REASON_NO_LOGIN_SERVER": self = .refuseReasonNoLoginServer
    case "REFUSE_REASON_NO_ROUTE_SERVER": self = .refuseReasonNoRouteServer
    case "REFUSE_REASON_DB_VALIDATE_FAILED": self = .refuseReasonDbValidateFailed
    case "REFUSE_REASON_VERSION_TOO_OLD": self = .refuseReasonVersionTooOld
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "REFUSE_REASON_NONE": self = .refuseReasonNone
    case "REFUSE_REASON_NO_MSG_SERVER": self = .refuseReasonNoMsgServer
    case "REFUSE_REASON_MSG_SERVER_FULL": self = .refuseReasonMsgServerFull
    case "REFUSE_REASON_NO_DB_SERVER": self = .refuseReasonNoDbServer
    case "REFUSE_REASON_NO_LOGIN_SERVER": self = .refuseReasonNoLoginServer
    case "REFUSE_REASON_NO_ROUTE_SERVER": self = .refuseReasonNoRouteServer
    case "REFUSE_REASON_DB_VALIDATE_FAILED": self = .refuseReasonDbValidateFailed
    case "REFUSE_REASON_VERSION_TOO_OLD": self = .refuseReasonVersionTooOld
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .refuseReasonNone: return 0
      case .refuseReasonNoMsgServer: return 1
      case .refuseReasonMsgServerFull: return 2
      case .refuseReasonNoDbServer: return 3
      case .refuseReasonNoLoginServer: return 4
      case .refuseReasonNoRouteServer: return 5
      case .refuseReasonDbValidateFailed: return 6
      case .refuseReasonVersionTooOld: return 7
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .refuseReasonNone: return "\"REFUSE_REASON_NONE\""
      case .refuseReasonNoMsgServer: return "\"REFUSE_REASON_NO_MSG_SERVER\""
      case .refuseReasonMsgServerFull: return "\"REFUSE_REASON_MSG_SERVER_FULL\""
      case .refuseReasonNoDbServer: return "\"REFUSE_REASON_NO_DB_SERVER\""
      case .refuseReasonNoLoginServer: return "\"REFUSE_REASON_NO_LOGIN_SERVER\""
      case .refuseReasonNoRouteServer: return "\"REFUSE_REASON_NO_ROUTE_SERVER\""
      case .refuseReasonDbValidateFailed: return "\"REFUSE_REASON_DB_VALIDATE_FAILED\""
      case .refuseReasonVersionTooOld: return "\"REFUSE_REASON_VERSION_TOO_OLD\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .refuseReasonNone: return ".refuseReasonNone"
      case .refuseReasonNoMsgServer: return ".refuseReasonNoMsgServer"
      case .refuseReasonMsgServerFull: return ".refuseReasonMsgServerFull"
      case .refuseReasonNoDbServer: return ".refuseReasonNoDbServer"
      case .refuseReasonNoLoginServer: return ".refuseReasonNoLoginServer"
      case .refuseReasonNoRouteServer: return ".refuseReasonNoRouteServer"
      case .refuseReasonDbValidateFailed: return ".refuseReasonDbValidateFailed"
      case .refuseReasonVersionTooOld: return ".refuseReasonVersionTooOld"
      }
    }
  }

}

enum IM_BaseDefine_KickReasonType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case kickReasonDuplicateUser // = 1
  case kickReasonMobileKick // = 2

  init() {
    self = .kickReasonDuplicateUser
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .kickReasonDuplicateUser
    case 2: self = .kickReasonMobileKick
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "kickReasonDuplicateUser": self = .kickReasonDuplicateUser
    case "kickReasonMobileKick": self = .kickReasonMobileKick
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "KICK_REASON_DUPLICATE_USER": self = .kickReasonDuplicateUser
    case "KICK_REASON_MOBILE_KICK": self = .kickReasonMobileKick
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "KICK_REASON_DUPLICATE_USER": self = .kickReasonDuplicateUser
    case "KICK_REASON_MOBILE_KICK": self = .kickReasonMobileKick
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .kickReasonDuplicateUser: return 1
      case .kickReasonMobileKick: return 2
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .kickReasonDuplicateUser: return "\"KICK_REASON_DUPLICATE_USER\""
      case .kickReasonMobileKick: return "\"KICK_REASON_MOBILE_KICK\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .kickReasonDuplicateUser: return ".kickReasonDuplicateUser"
      case .kickReasonMobileKick: return ".kickReasonMobileKick"
      }
    }
  }

}

enum IM_BaseDefine_OnlineListType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case friendList // = 1

  init() {
    self = .friendList
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .friendList
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "friendList": self = .friendList
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "ONLINE_LIST_TYPE_FRIEND_LIST": self = .friendList
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "ONLINE_LIST_TYPE_FRIEND_LIST": self = .friendList
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .friendList: return 1
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .friendList: return "\"ONLINE_LIST_TYPE_FRIEND_LIST\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .friendList: return ".friendList"
      }
    }
  }

}

enum IM_BaseDefine_UserStatType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case userStatusOnline // = 1
  case userStatusOffline // = 2
  case userStatusLeave // = 3

  init() {
    self = .userStatusOnline
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .userStatusOnline
    case 2: self = .userStatusOffline
    case 3: self = .userStatusLeave
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "userStatusOnline": self = .userStatusOnline
    case "userStatusOffline": self = .userStatusOffline
    case "userStatusLeave": self = .userStatusLeave
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "USER_STATUS_ONLINE": self = .userStatusOnline
    case "USER_STATUS_OFFLINE": self = .userStatusOffline
    case "USER_STATUS_LEAVE": self = .userStatusLeave
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "USER_STATUS_ONLINE": self = .userStatusOnline
    case "USER_STATUS_OFFLINE": self = .userStatusOffline
    case "USER_STATUS_LEAVE": self = .userStatusLeave
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .userStatusOnline: return 1
      case .userStatusOffline: return 2
      case .userStatusLeave: return 3
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .userStatusOnline: return "\"USER_STATUS_ONLINE\""
      case .userStatusOffline: return "\"USER_STATUS_OFFLINE\""
      case .userStatusLeave: return "\"USER_STATUS_LEAVE\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .userStatusOnline: return ".userStatusOnline"
      case .userStatusOffline: return ".userStatusOffline"
      case .userStatusLeave: return ".userStatusLeave"
      }
    }
  }

}

enum IM_BaseDefine_SessionType: SwiftProtobuf.Enum {
  typealias RawValue = Int

  ///  单个用户会话
  case single // = 1

  ///  群会话
  case group // = 2

  init() {
    self = .single
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .single
    case 2: self = .group
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "single": self = .single
    case "group": self = .group
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "SESSION_TYPE_SINGLE": self = .single
    case "SESSION_TYPE_GROUP": self = .group
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "SESSION_TYPE_SINGLE": self = .single
    case "SESSION_TYPE_GROUP": self = .group
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .single: return 1
      case .group: return 2
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .single: return "\"SESSION_TYPE_SINGLE\""
      case .group: return "\"SESSION_TYPE_GROUP\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .single: return ".single"
      case .group: return ".group"
      }
    }
  }

}

enum IM_BaseDefine_MsgType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case singleText // = 1
  case singleAudio // = 2
  case groupText // = 17
  case groupAudio // = 18

  init() {
    self = .singleText
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .singleText
    case 2: self = .singleAudio
    case 17: self = .groupText
    case 18: self = .groupAudio
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "singleText": self = .singleText
    case "singleAudio": self = .singleAudio
    case "groupText": self = .groupText
    case "groupAudio": self = .groupAudio
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "MSG_TYPE_SINGLE_TEXT": self = .singleText
    case "MSG_TYPE_SINGLE_AUDIO": self = .singleAudio
    case "MSG_TYPE_GROUP_TEXT": self = .groupText
    case "MSG_TYPE_GROUP_AUDIO": self = .groupAudio
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "MSG_TYPE_SINGLE_TEXT": self = .singleText
    case "MSG_TYPE_SINGLE_AUDIO": self = .singleAudio
    case "MSG_TYPE_GROUP_TEXT": self = .groupText
    case "MSG_TYPE_GROUP_AUDIO": self = .groupAudio
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .singleText: return 1
      case .singleAudio: return 2
      case .groupText: return 17
      case .groupAudio: return 18
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .singleText: return "\"MSG_TYPE_SINGLE_TEXT\""
      case .singleAudio: return "\"MSG_TYPE_SINGLE_AUDIO\""
      case .groupText: return "\"MSG_TYPE_GROUP_TEXT\""
      case .groupAudio: return "\"MSG_TYPE_GROUP_AUDIO\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .singleText: return ".singleText"
      case .singleAudio: return ".singleAudio"
      case .groupText: return ".groupText"
      case .groupAudio: return ".groupAudio"
      }
    }
  }

}

enum IM_BaseDefine_ClientType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case windows // = 1
  case mac // = 2
  case ios // = 17
  case android // = 18

  init() {
    self = .windows
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .windows
    case 2: self = .mac
    case 17: self = .ios
    case 18: self = .android
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "windows": self = .windows
    case "mac": self = .mac
    case "ios": self = .ios
    case "android": self = .android
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CLIENT_TYPE_WINDOWS": self = .windows
    case "CLIENT_TYPE_MAC": self = .mac
    case "CLIENT_TYPE_IOS": self = .ios
    case "CLIENT_TYPE_ANDROID": self = .android
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CLIENT_TYPE_WINDOWS": self = .windows
    case "CLIENT_TYPE_MAC": self = .mac
    case "CLIENT_TYPE_IOS": self = .ios
    case "CLIENT_TYPE_ANDROID": self = .android
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .windows: return 1
      case .mac: return 2
      case .ios: return 17
      case .android: return 18
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .windows: return "\"CLIENT_TYPE_WINDOWS\""
      case .mac: return "\"CLIENT_TYPE_MAC\""
      case .ios: return "\"CLIENT_TYPE_IOS\""
      case .android: return "\"CLIENT_TYPE_ANDROID\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .windows: return ".windows"
      case .mac: return ".mac"
      case .ios: return ".ios"
      case .android: return ".android"
      }
    }
  }

}

enum IM_BaseDefine_GroupType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case normal // = 1
  case tmp // = 2

  init() {
    self = .normal
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .normal
    case 2: self = .tmp
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "normal": self = .normal
    case "tmp": self = .tmp
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "GROUP_TYPE_NORMAL": self = .normal
    case "GROUP_TYPE_TMP": self = .tmp
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "GROUP_TYPE_NORMAL": self = .normal
    case "GROUP_TYPE_TMP": self = .tmp
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .normal: return 1
      case .tmp: return 2
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .normal: return "\"GROUP_TYPE_NORMAL\""
      case .tmp: return "\"GROUP_TYPE_TMP\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .normal: return ".normal"
      case .tmp: return ".tmp"
      }
    }
  }

}

enum IM_BaseDefine_GroupModifyType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case add // = 1
  case del // = 2

  init() {
    self = .add
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .add
    case 2: self = .del
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "add": self = .add
    case "del": self = .del
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "GROUP_MODIFY_TYPE_ADD": self = .add
    case "GROUP_MODIFY_TYPE_DEL": self = .del
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "GROUP_MODIFY_TYPE_ADD": self = .add
    case "GROUP_MODIFY_TYPE_DEL": self = .del
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .add: return 1
      case .del: return 2
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .add: return "\"GROUP_MODIFY_TYPE_ADD\""
      case .del: return "\"GROUP_MODIFY_TYPE_DEL\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .add: return ".add"
      case .del: return ".del"
      }
    }
  }

}

enum IM_BaseDefine_TransferFileType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case fileTypeOnline // = 1
  case fileTypeOffline // = 2

  init() {
    self = .fileTypeOnline
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .fileTypeOnline
    case 2: self = .fileTypeOffline
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "fileTypeOnline": self = .fileTypeOnline
    case "fileTypeOffline": self = .fileTypeOffline
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "FILE_TYPE_ONLINE": self = .fileTypeOnline
    case "FILE_TYPE_OFFLINE": self = .fileTypeOffline
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "FILE_TYPE_ONLINE": self = .fileTypeOnline
    case "FILE_TYPE_OFFLINE": self = .fileTypeOffline
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .fileTypeOnline: return 1
      case .fileTypeOffline: return 2
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .fileTypeOnline: return "\"FILE_TYPE_ONLINE\""
      case .fileTypeOffline: return "\"FILE_TYPE_OFFLINE\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .fileTypeOnline: return ".fileTypeOnline"
      case .fileTypeOffline: return ".fileTypeOffline"
      }
    }
  }

}

enum IM_BaseDefine_ClientFileState: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case clientFilePeerReady // = 0
  case clientFileCancel // = 1
  case clientFileRefuse // = 2
  case clientFileDone // = 3

  init() {
    self = .clientFilePeerReady
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .clientFilePeerReady
    case 1: self = .clientFileCancel
    case 2: self = .clientFileRefuse
    case 3: self = .clientFileDone
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "clientFilePeerReady": self = .clientFilePeerReady
    case "clientFileCancel": self = .clientFileCancel
    case "clientFileRefuse": self = .clientFileRefuse
    case "clientFileDone": self = .clientFileDone
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CLIENT_FILE_PEER_READY": self = .clientFilePeerReady
    case "CLIENT_FILE_CANCEL": self = .clientFileCancel
    case "CLIENT_FILE_REFUSE": self = .clientFileRefuse
    case "CLIENT_FILE_DONE": self = .clientFileDone
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CLIENT_FILE_PEER_READY": self = .clientFilePeerReady
    case "CLIENT_FILE_CANCEL": self = .clientFileCancel
    case "CLIENT_FILE_REFUSE": self = .clientFileRefuse
    case "CLIENT_FILE_DONE": self = .clientFileDone
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .clientFilePeerReady: return 0
      case .clientFileCancel: return 1
      case .clientFileRefuse: return 2
      case .clientFileDone: return 3
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .clientFilePeerReady: return "\"CLIENT_FILE_PEER_READY\""
      case .clientFileCancel: return "\"CLIENT_FILE_CANCEL\""
      case .clientFileRefuse: return "\"CLIENT_FILE_REFUSE\""
      case .clientFileDone: return "\"CLIENT_FILE_DONE\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .clientFilePeerReady: return ".clientFilePeerReady"
      case .clientFileCancel: return ".clientFileCancel"
      case .clientFileRefuse: return ".clientFileRefuse"
      case .clientFileDone: return ".clientFileDone"
      }
    }
  }

}

enum IM_BaseDefine_ClientFileRole: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case clientRealtimeSender // = 1
  case clientRealtimeRecver // = 2
  case clientOfflineUpload // = 3
  case clientOfflineDownload // = 4

  init() {
    self = .clientRealtimeSender
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .clientRealtimeSender
    case 2: self = .clientRealtimeRecver
    case 3: self = .clientOfflineUpload
    case 4: self = .clientOfflineDownload
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "clientRealtimeSender": self = .clientRealtimeSender
    case "clientRealtimeRecver": self = .clientRealtimeRecver
    case "clientOfflineUpload": self = .clientOfflineUpload
    case "clientOfflineDownload": self = .clientOfflineDownload
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "CLIENT_REALTIME_SENDER": self = .clientRealtimeSender
    case "CLIENT_REALTIME_RECVER": self = .clientRealtimeRecver
    case "CLIENT_OFFLINE_UPLOAD": self = .clientOfflineUpload
    case "CLIENT_OFFLINE_DOWNLOAD": self = .clientOfflineDownload
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "CLIENT_REALTIME_SENDER": self = .clientRealtimeSender
    case "CLIENT_REALTIME_RECVER": self = .clientRealtimeRecver
    case "CLIENT_OFFLINE_UPLOAD": self = .clientOfflineUpload
    case "CLIENT_OFFLINE_DOWNLOAD": self = .clientOfflineDownload
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .clientRealtimeSender: return 1
      case .clientRealtimeRecver: return 2
      case .clientOfflineUpload: return 3
      case .clientOfflineDownload: return 4
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .clientRealtimeSender: return "\"CLIENT_REALTIME_SENDER\""
      case .clientRealtimeRecver: return "\"CLIENT_REALTIME_RECVER\""
      case .clientOfflineUpload: return "\"CLIENT_OFFLINE_UPLOAD\""
      case .clientOfflineDownload: return "\"CLIENT_OFFLINE_DOWNLOAD\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .clientRealtimeSender: return ".clientRealtimeSender"
      case .clientRealtimeRecver: return ".clientRealtimeRecver"
      case .clientOfflineUpload: return ".clientOfflineUpload"
      case .clientOfflineDownload: return ".clientOfflineDownload"
      }
    }
  }

}

enum IM_BaseDefine_FileServerError: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case fileServerErrnoOk // = 0
  case fileServerErrnoCreateTaskIdError // = 1
  case fileServerErrnoCreateTaskError // = 2
  case fileServerErrnoLoginInvalidToken // = 3
  case fileServerErrnoInvalidUserForTask // = 4
  case fileServerErrnoPullDataWithInvalidTaskId // = 5
  case fileServerErrnoPullDataIllieageUser // = 6
  case fileServerErrnoPullDataMkdirError // = 7
  case fileServerErrnoPullDataOpenFileError // = 8
  case fileServerErrnoPullDataReadFileHeaderError // = 9
  case fileServerErrnoPullDataAllocMemError // = 10
  case fileServerErrnoPullDataSeekOffsetError // = 11
  case fileServerErrnoPullDataFinished // = 12

  init() {
    self = .fileServerErrnoOk
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .fileServerErrnoOk
    case 1: self = .fileServerErrnoCreateTaskIdError
    case 2: self = .fileServerErrnoCreateTaskError
    case 3: self = .fileServerErrnoLoginInvalidToken
    case 4: self = .fileServerErrnoInvalidUserForTask
    case 5: self = .fileServerErrnoPullDataWithInvalidTaskId
    case 6: self = .fileServerErrnoPullDataIllieageUser
    case 7: self = .fileServerErrnoPullDataMkdirError
    case 8: self = .fileServerErrnoPullDataOpenFileError
    case 9: self = .fileServerErrnoPullDataReadFileHeaderError
    case 10: self = .fileServerErrnoPullDataAllocMemError
    case 11: self = .fileServerErrnoPullDataSeekOffsetError
    case 12: self = .fileServerErrnoPullDataFinished
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "fileServerErrnoOk": self = .fileServerErrnoOk
    case "fileServerErrnoCreateTaskIdError": self = .fileServerErrnoCreateTaskIdError
    case "fileServerErrnoCreateTaskError": self = .fileServerErrnoCreateTaskError
    case "fileServerErrnoLoginInvalidToken": self = .fileServerErrnoLoginInvalidToken
    case "fileServerErrnoInvalidUserForTask": self = .fileServerErrnoInvalidUserForTask
    case "fileServerErrnoPullDataWithInvalidTaskId": self = .fileServerErrnoPullDataWithInvalidTaskId
    case "fileServerErrnoPullDataIllieageUser": self = .fileServerErrnoPullDataIllieageUser
    case "fileServerErrnoPullDataMkdirError": self = .fileServerErrnoPullDataMkdirError
    case "fileServerErrnoPullDataOpenFileError": self = .fileServerErrnoPullDataOpenFileError
    case "fileServerErrnoPullDataReadFileHeaderError": self = .fileServerErrnoPullDataReadFileHeaderError
    case "fileServerErrnoPullDataAllocMemError": self = .fileServerErrnoPullDataAllocMemError
    case "fileServerErrnoPullDataSeekOffsetError": self = .fileServerErrnoPullDataSeekOffsetError
    case "fileServerErrnoPullDataFinished": self = .fileServerErrnoPullDataFinished
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "FILE_SERVER_ERRNO_OK": self = .fileServerErrnoOk
    case "FILE_SERVER_ERRNO_CREATE_TASK_ID_ERROR": self = .fileServerErrnoCreateTaskIdError
    case "FILE_SERVER_ERRNO_CREATE_TASK_ERROR": self = .fileServerErrnoCreateTaskError
    case "FILE_SERVER_ERRNO_LOGIN_INVALID_TOKEN": self = .fileServerErrnoLoginInvalidToken
    case "FILE_SERVER_ERRNO_INVALID_USER_FOR_TASK": self = .fileServerErrnoInvalidUserForTask
    case "FILE_SERVER_ERRNO_PULL_DATA_WITH_INVALID_TASK_ID": self = .fileServerErrnoPullDataWithInvalidTaskId
    case "FILE_SERVER_ERRNO_PULL_DATA_ILLIEAGE_USER": self = .fileServerErrnoPullDataIllieageUser
    case "FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR": self = .fileServerErrnoPullDataMkdirError
    case "FILE_SERVER_ERRNO_PULL_DATA_OPEN_FILE_ERROR": self = .fileServerErrnoPullDataOpenFileError
    case "FILE_SERVER_ERRNO_PULL_DATA_READ_FILE_HEADER_ERROR": self = .fileServerErrnoPullDataReadFileHeaderError
    case "FILE_SERVER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR": self = .fileServerErrnoPullDataAllocMemError
    case "FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_ERROR": self = .fileServerErrnoPullDataSeekOffsetError
    case "FILE_SERVER_ERRNO_PULL_DATA_FINISHED": self = .fileServerErrnoPullDataFinished
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "FILE_SERVER_ERRNO_OK": self = .fileServerErrnoOk
    case "FILE_SERVER_ERRNO_CREATE_TASK_ID_ERROR": self = .fileServerErrnoCreateTaskIdError
    case "FILE_SERVER_ERRNO_CREATE_TASK_ERROR": self = .fileServerErrnoCreateTaskError
    case "FILE_SERVER_ERRNO_LOGIN_INVALID_TOKEN": self = .fileServerErrnoLoginInvalidToken
    case "FILE_SERVER_ERRNO_INVALID_USER_FOR_TASK": self = .fileServerErrnoInvalidUserForTask
    case "FILE_SERVER_ERRNO_PULL_DATA_WITH_INVALID_TASK_ID": self = .fileServerErrnoPullDataWithInvalidTaskId
    case "FILE_SERVER_ERRNO_PULL_DATA_ILLIEAGE_USER": self = .fileServerErrnoPullDataIllieageUser
    case "FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR": self = .fileServerErrnoPullDataMkdirError
    case "FILE_SERVER_ERRNO_PULL_DATA_OPEN_FILE_ERROR": self = .fileServerErrnoPullDataOpenFileError
    case "FILE_SERVER_ERRNO_PULL_DATA_READ_FILE_HEADER_ERROR": self = .fileServerErrnoPullDataReadFileHeaderError
    case "FILE_SERVER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR": self = .fileServerErrnoPullDataAllocMemError
    case "FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_ERROR": self = .fileServerErrnoPullDataSeekOffsetError
    case "FILE_SERVER_ERRNO_PULL_DATA_FINISHED": self = .fileServerErrnoPullDataFinished
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .fileServerErrnoOk: return 0
      case .fileServerErrnoCreateTaskIdError: return 1
      case .fileServerErrnoCreateTaskError: return 2
      case .fileServerErrnoLoginInvalidToken: return 3
      case .fileServerErrnoInvalidUserForTask: return 4
      case .fileServerErrnoPullDataWithInvalidTaskId: return 5
      case .fileServerErrnoPullDataIllieageUser: return 6
      case .fileServerErrnoPullDataMkdirError: return 7
      case .fileServerErrnoPullDataOpenFileError: return 8
      case .fileServerErrnoPullDataReadFileHeaderError: return 9
      case .fileServerErrnoPullDataAllocMemError: return 10
      case .fileServerErrnoPullDataSeekOffsetError: return 11
      case .fileServerErrnoPullDataFinished: return 12
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .fileServerErrnoOk: return "\"FILE_SERVER_ERRNO_OK\""
      case .fileServerErrnoCreateTaskIdError: return "\"FILE_SERVER_ERRNO_CREATE_TASK_ID_ERROR\""
      case .fileServerErrnoCreateTaskError: return "\"FILE_SERVER_ERRNO_CREATE_TASK_ERROR\""
      case .fileServerErrnoLoginInvalidToken: return "\"FILE_SERVER_ERRNO_LOGIN_INVALID_TOKEN\""
      case .fileServerErrnoInvalidUserForTask: return "\"FILE_SERVER_ERRNO_INVALID_USER_FOR_TASK\""
      case .fileServerErrnoPullDataWithInvalidTaskId: return "\"FILE_SERVER_ERRNO_PULL_DATA_WITH_INVALID_TASK_ID\""
      case .fileServerErrnoPullDataIllieageUser: return "\"FILE_SERVER_ERRNO_PULL_DATA_ILLIEAGE_USER\""
      case .fileServerErrnoPullDataMkdirError: return "\"FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR\""
      case .fileServerErrnoPullDataOpenFileError: return "\"FILE_SERVER_ERRNO_PULL_DATA_OPEN_FILE_ERROR\""
      case .fileServerErrnoPullDataReadFileHeaderError: return "\"FILE_SERVER_ERRNO_PULL_DATA_READ_FILE_HEADER_ERROR\""
      case .fileServerErrnoPullDataAllocMemError: return "\"FILE_SERVER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR\""
      case .fileServerErrnoPullDataSeekOffsetError: return "\"FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_ERROR\""
      case .fileServerErrnoPullDataFinished: return "\"FILE_SERVER_ERRNO_PULL_DATA_FINISHED\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .fileServerErrnoOk: return ".fileServerErrnoOk"
      case .fileServerErrnoCreateTaskIdError: return ".fileServerErrnoCreateTaskIdError"
      case .fileServerErrnoCreateTaskError: return ".fileServerErrnoCreateTaskError"
      case .fileServerErrnoLoginInvalidToken: return ".fileServerErrnoLoginInvalidToken"
      case .fileServerErrnoInvalidUserForTask: return ".fileServerErrnoInvalidUserForTask"
      case .fileServerErrnoPullDataWithInvalidTaskId: return ".fileServerErrnoPullDataWithInvalidTaskId"
      case .fileServerErrnoPullDataIllieageUser: return ".fileServerErrnoPullDataIllieageUser"
      case .fileServerErrnoPullDataMkdirError: return ".fileServerErrnoPullDataMkdirError"
      case .fileServerErrnoPullDataOpenFileError: return ".fileServerErrnoPullDataOpenFileError"
      case .fileServerErrnoPullDataReadFileHeaderError: return ".fileServerErrnoPullDataReadFileHeaderError"
      case .fileServerErrnoPullDataAllocMemError: return ".fileServerErrnoPullDataAllocMemError"
      case .fileServerErrnoPullDataSeekOffsetError: return ".fileServerErrnoPullDataSeekOffsetError"
      case .fileServerErrnoPullDataFinished: return ".fileServerErrnoPullDataFinished"
      }
    }
  }

}

enum IM_BaseDefine_SessionStatusType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case sessionStatusOk // = 0
  case sessionStatusDelete // = 1

  init() {
    self = .sessionStatusOk
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .sessionStatusOk
    case 1: self = .sessionStatusDelete
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "sessionStatusOk": self = .sessionStatusOk
    case "sessionStatusDelete": self = .sessionStatusDelete
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "SESSION_STATUS_OK": self = .sessionStatusOk
    case "SESSION_STATUS_DELETE": self = .sessionStatusDelete
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "SESSION_STATUS_OK": self = .sessionStatusOk
    case "SESSION_STATUS_DELETE": self = .sessionStatusDelete
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .sessionStatusOk: return 0
      case .sessionStatusDelete: return 1
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .sessionStatusOk: return "\"SESSION_STATUS_OK\""
      case .sessionStatusDelete: return "\"SESSION_STATUS_DELETE\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .sessionStatusOk: return ".sessionStatusOk"
      case .sessionStatusDelete: return ".sessionStatusDelete"
      }
    }
  }

}

enum IM_BaseDefine_DepartmentStatusType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case deptStatusOk // = 0
  case deptStatusDelete // = 1

  init() {
    self = .deptStatusOk
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .deptStatusOk
    case 1: self = .deptStatusDelete
    default: return nil
    }
  }

  init?(name: String) {
    switch name {
    case "deptStatusOk": self = .deptStatusOk
    case "deptStatusDelete": self = .deptStatusDelete
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "DEPT_STATUS_OK": self = .deptStatusOk
    case "DEPT_STATUS_DELETE": self = .deptStatusDelete
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "DEPT_STATUS_OK": self = .deptStatusOk
    case "DEPT_STATUS_DELETE": self = .deptStatusDelete
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .deptStatusOk: return 0
      case .deptStatusDelete: return 1
      }
    }
  }

  var json: String {
    get {
      switch self {
      case .deptStatusOk: return "\"DEPT_STATUS_OK\""
      case .deptStatusDelete: return "\"DEPT_STATUS_DELETE\""
      }
    }
  }

  var hashValue: Int { return rawValue }

  var debugDescription: String {
    get {
      switch self {
      case .deptStatusOk: return ".deptStatusOk"
      case .deptStatusDelete: return ".deptStatusDelete"
      }
    }
  }

}

struct IM_BaseDefine_IpAddr: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_IpAddr"}
  public var protoMessageName: String {return "IpAddr"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "ip", swift: "ip"),
    2: .same(proto: "port", swift: "port"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _ip: String? = nil
  var ip: String {
    get {return _ip ?? ""}
    set {_ip = newValue}
  }
  public var hasIp: Bool {
    return _ip != nil
  }
  public mutating func clearIp() {
    return _ip = nil
  }

  private var _port: UInt32? = nil
  var port: UInt32 {
    get {return _port ?? 0}
    set {_port = newValue}
  }
  public var hasPort: Bool {
    return _port != nil
  }
  public mutating func clearPort() {
    return _port = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_ip)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_port)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _ip ?? "", protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _port ?? 0, protoFieldNumber: 2)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_IpAddr) -> Bool {
    if (ip != other.ip) {return false}
    if (port != other.port) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_UserInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_UserInfo"}
  public var protoMessageName: String {return "UserInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_id", json: "userId", swift: "userId"),
    2: .unique(proto: "user_gender", json: "userGender", swift: "userGender"),
    3: .unique(proto: "user_nick_name", json: "userNickName", swift: "userNickName"),
    4: .unique(proto: "avatar_url", json: "avatarUrl", swift: "avatarURL"),
    5: .unique(proto: "department_id", json: "departmentId", swift: "departmentId"),
    6: .same(proto: "email", swift: "email"),
    7: .unique(proto: "user_real_name", json: "userRealName", swift: "userRealName"),
    8: .unique(proto: "user_tel", json: "userTel", swift: "userTel"),
    9: .unique(proto: "user_domain", json: "userDomain", swift: "userDomain"),
    10: .same(proto: "status", swift: "status"),
    11: .unique(proto: "sign_info", json: "signInfo", swift: "signInfo"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userId: UInt32? = nil
  var userId: UInt32 {
    get {return _userId ?? 0}
    set {_userId = newValue}
  }
  public var hasUserId: Bool {
    return _userId != nil
  }
  public mutating func clearUserId() {
    return _userId = nil
  }

  ///  // 用户性别,男：1 女：2 人妖/外星人：0
  private var _userGender: UInt32? = nil
  var userGender: UInt32 {
    get {return _userGender ?? 0}
    set {_userGender = newValue}
  }
  public var hasUserGender: Bool {
    return _userGender != nil
  }
  public mutating func clearUserGender() {
    return _userGender = nil
  }

  ///  绰号
  private var _userNickName: String? = nil
  var userNickName: String {
    get {return _userNickName ?? ""}
    set {_userNickName = newValue}
  }
  public var hasUserNickName: Bool {
    return _userNickName != nil
  }
  public mutating func clearUserNickName() {
    return _userNickName = nil
  }

  private var _avatarURL: String? = nil
  var avatarURL: String {
    get {return _avatarURL ?? ""}
    set {_avatarURL = newValue}
  }
  public var hasAvatarURL: Bool {
    return _avatarURL != nil
  }
  public mutating func clearAvatarURL() {
    return _avatarURL = nil
  }

  private var _departmentId: UInt32? = nil
  var departmentId: UInt32 {
    get {return _departmentId ?? 0}
    set {_departmentId = newValue}
  }
  public var hasDepartmentId: Bool {
    return _departmentId != nil
  }
  public mutating func clearDepartmentId() {
    return _departmentId = nil
  }

  private var _email: String? = nil
  var email: String {
    get {return _email ?? ""}
    set {_email = newValue}
  }
  public var hasEmail: Bool {
    return _email != nil
  }
  public mutating func clearEmail() {
    return _email = nil
  }

  ///  真名
  private var _userRealName: String? = nil
  var userRealName: String {
    get {return _userRealName ?? ""}
    set {_userRealName = newValue}
  }
  public var hasUserRealName: Bool {
    return _userRealName != nil
  }
  public mutating func clearUserRealName() {
    return _userRealName = nil
  }

  private var _userTel: String? = nil
  var userTel: String {
    get {return _userTel ?? ""}
    set {_userTel = newValue}
  }
  public var hasUserTel: Bool {
    return _userTel != nil
  }
  public mutating func clearUserTel() {
    return _userTel = nil
  }

  ///  用户名拼音
  private var _userDomain: String? = nil
  var userDomain: String {
    get {return _userDomain ?? ""}
    set {_userDomain = newValue}
  }
  public var hasUserDomain: Bool {
    return _userDomain != nil
  }
  public mutating func clearUserDomain() {
    return _userDomain = nil
  }

  ///  0:在职  1. 试用期 2. 正式 3. 离职 4.实习,  client端需要对“离职”进行不展示
  private var _status: UInt32? = nil
  var status: UInt32 {
    get {return _status ?? 0}
    set {_status = newValue}
  }
  public var hasStatus: Bool {
    return _status != nil
  }
  public mutating func clearStatus() {
    return _status = nil
  }

  private var _signInfo: String? = nil
  var signInfo: String {
    get {return _signInfo ?? ""}
    set {_signInfo = newValue}
  }
  public var hasSignInfo: Bool {
    return _signInfo != nil
  }
  public mutating func clearSignInfo() {
    return _signInfo = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userGender)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_userNickName)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_avatarURL)
    case 5: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_departmentId)
    case 6: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_email)
    case 7: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_userRealName)
    case 8: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_userTel)
    case 9: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_userDomain)
    case 10: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_status)
    case 11: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_signInfo)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userGender ?? 0, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _userNickName ?? "", protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _avatarURL ?? "", protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _departmentId ?? 0, protoFieldNumber: 5)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _email ?? "", protoFieldNumber: 6)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _userRealName ?? "", protoFieldNumber: 7)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _userTel ?? "", protoFieldNumber: 8)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _userDomain ?? "", protoFieldNumber: 9)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _status ?? 0, protoFieldNumber: 10)
    if let v = _signInfo {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, protoFieldNumber: 11)
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_UserInfo) -> Bool {
    if (userId != other.userId) {return false}
    if (userGender != other.userGender) {return false}
    if (userNickName != other.userNickName) {return false}
    if (avatarURL != other.avatarURL) {return false}
    if (departmentId != other.departmentId) {return false}
    if (email != other.email) {return false}
    if (userRealName != other.userRealName) {return false}
    if (userTel != other.userTel) {return false}
    if (userDomain != other.userDomain) {return false}
    if (status != other.status) {return false}
    if (signInfo != other.signInfo) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_ContactSessionInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_ContactSessionInfo"}
  public var protoMessageName: String {return "ContactSessionInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "session_id", json: "sessionId", swift: "sessionId"),
    2: .unique(proto: "session_type", json: "sessionType", swift: "sessionType"),
    3: .unique(proto: "session_status", json: "sessionStatus", swift: "sessionStatus"),
    4: .unique(proto: "updated_time", json: "updatedTime", swift: "updatedTime"),
    5: .unique(proto: "latest_msg_id", json: "latestMsgId", swift: "latestMsgId"),
    6: .unique(proto: "latest_msg_data", json: "latestMsgData", swift: "latestMsgData"),
    7: .unique(proto: "latest_msg_type", json: "latestMsgType", swift: "latestMsgType"),
    8: .unique(proto: "latest_msg_from_user_id", json: "latestMsgFromUserId", swift: "latestMsgFromUserId"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _sessionId: UInt32? = nil
  var sessionId: UInt32 {
    get {return _sessionId ?? 0}
    set {_sessionId = newValue}
  }
  public var hasSessionId: Bool {
    return _sessionId != nil
  }
  public mutating func clearSessionId() {
    return _sessionId = nil
  }

  private var _sessionType: IM_BaseDefine_SessionType? = nil
  var sessionType: IM_BaseDefine_SessionType {
    get {return _sessionType ?? IM_BaseDefine_SessionType.single}
    set {_sessionType = newValue}
  }
  public var hasSessionType: Bool {
    return _sessionType != nil
  }
  public mutating func clearSessionType() {
    return _sessionType = nil
  }

  private var _sessionStatus: IM_BaseDefine_SessionStatusType? = nil
  var sessionStatus: IM_BaseDefine_SessionStatusType {
    get {return _sessionStatus ?? IM_BaseDefine_SessionStatusType.sessionStatusOk}
    set {_sessionStatus = newValue}
  }
  public var hasSessionStatus: Bool {
    return _sessionStatus != nil
  }
  public mutating func clearSessionStatus() {
    return _sessionStatus = nil
  }

  private var _updatedTime: UInt32? = nil
  var updatedTime: UInt32 {
    get {return _updatedTime ?? 0}
    set {_updatedTime = newValue}
  }
  public var hasUpdatedTime: Bool {
    return _updatedTime != nil
  }
  public mutating func clearUpdatedTime() {
    return _updatedTime = nil
  }

  private var _latestMsgId: UInt32? = nil
  var latestMsgId: UInt32 {
    get {return _latestMsgId ?? 0}
    set {_latestMsgId = newValue}
  }
  public var hasLatestMsgId: Bool {
    return _latestMsgId != nil
  }
  public mutating func clearLatestMsgId() {
    return _latestMsgId = nil
  }

  private var _latestMsgData: Data? = nil
  var latestMsgData: Data {
    get {return _latestMsgData ?? Data()}
    set {_latestMsgData = newValue}
  }
  public var hasLatestMsgData: Bool {
    return _latestMsgData != nil
  }
  public mutating func clearLatestMsgData() {
    return _latestMsgData = nil
  }

  private var _latestMsgType: IM_BaseDefine_MsgType? = nil
  var latestMsgType: IM_BaseDefine_MsgType {
    get {return _latestMsgType ?? IM_BaseDefine_MsgType.singleText}
    set {_latestMsgType = newValue}
  }
  public var hasLatestMsgType: Bool {
    return _latestMsgType != nil
  }
  public mutating func clearLatestMsgType() {
    return _latestMsgType = nil
  }

  private var _latestMsgFromUserId: UInt32? = nil
  var latestMsgFromUserId: UInt32 {
    get {return _latestMsgFromUserId ?? 0}
    set {_latestMsgFromUserId = newValue}
  }
  public var hasLatestMsgFromUserId: Bool {
    return _latestMsgFromUserId != nil
  }
  public mutating func clearLatestMsgFromUserId() {
    return _latestMsgFromUserId = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_sessionId)
    case 2: try setter.decodeSingularField(fieldType: IM_BaseDefine_SessionType.self, value: &_sessionType)
    case 3: try setter.decodeSingularField(fieldType: IM_BaseDefine_SessionStatusType.self, value: &_sessionStatus)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_updatedTime)
    case 5: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_latestMsgId)
    case 6: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: &_latestMsgData)
    case 7: try setter.decodeSingularField(fieldType: IM_BaseDefine_MsgType.self, value: &_latestMsgType)
    case 8: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_latestMsgFromUserId)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _sessionId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_SessionType.self, value: _sessionType ?? IM_BaseDefine_SessionType.single, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_SessionStatusType.self, value: _sessionStatus ?? IM_BaseDefine_SessionStatusType.sessionStatusOk, protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _updatedTime ?? 0, protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _latestMsgId ?? 0, protoFieldNumber: 5)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: _latestMsgData ?? Data(), protoFieldNumber: 6)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_MsgType.self, value: _latestMsgType ?? IM_BaseDefine_MsgType.singleText, protoFieldNumber: 7)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _latestMsgFromUserId ?? 0, protoFieldNumber: 8)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_ContactSessionInfo) -> Bool {
    if (sessionId != other.sessionId) {return false}
    if (sessionType != other.sessionType) {return false}
    if (sessionStatus != other.sessionStatus) {return false}
    if (updatedTime != other.updatedTime) {return false}
    if (latestMsgId != other.latestMsgId) {return false}
    if (latestMsgData != other.latestMsgData) {return false}
    if (latestMsgType != other.latestMsgType) {return false}
    if (latestMsgFromUserId != other.latestMsgFromUserId) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_UserStat: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_UserStat"}
  public var protoMessageName: String {return "UserStat"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_id", json: "userId", swift: "userId"),
    2: .same(proto: "status", swift: "status"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userId: UInt32? = nil
  var userId: UInt32 {
    get {return _userId ?? 0}
    set {_userId = newValue}
  }
  public var hasUserId: Bool {
    return _userId != nil
  }
  public mutating func clearUserId() {
    return _userId = nil
  }

  private var _status: IM_BaseDefine_UserStatType? = nil
  var status: IM_BaseDefine_UserStatType {
    get {return _status ?? IM_BaseDefine_UserStatType.userStatusOnline}
    set {_status = newValue}
  }
  public var hasStatus: Bool {
    return _status != nil
  }
  public mutating func clearStatus() {
    return _status = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userId)
    case 2: try setter.decodeSingularField(fieldType: IM_BaseDefine_UserStatType.self, value: &_status)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_UserStatType.self, value: _status ?? IM_BaseDefine_UserStatType.userStatusOnline, protoFieldNumber: 2)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_UserStat) -> Bool {
    if (userId != other.userId) {return false}
    if (status != other.status) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_ServerUserStat: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_ServerUserStat"}
  public var protoMessageName: String {return "ServerUserStat"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_id", json: "userId", swift: "userId"),
    2: .same(proto: "status", swift: "status"),
    3: .unique(proto: "client_type", json: "clientType", swift: "clientType"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userId: UInt32? = nil
  var userId: UInt32 {
    get {return _userId ?? 0}
    set {_userId = newValue}
  }
  public var hasUserId: Bool {
    return _userId != nil
  }
  public mutating func clearUserId() {
    return _userId = nil
  }

  private var _status: IM_BaseDefine_UserStatType? = nil
  var status: IM_BaseDefine_UserStatType {
    get {return _status ?? IM_BaseDefine_UserStatType.userStatusOnline}
    set {_status = newValue}
  }
  public var hasStatus: Bool {
    return _status != nil
  }
  public mutating func clearStatus() {
    return _status = nil
  }

  private var _clientType: IM_BaseDefine_ClientType? = nil
  var clientType: IM_BaseDefine_ClientType {
    get {return _clientType ?? IM_BaseDefine_ClientType.windows}
    set {_clientType = newValue}
  }
  public var hasClientType: Bool {
    return _clientType != nil
  }
  public mutating func clearClientType() {
    return _clientType = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userId)
    case 2: try setter.decodeSingularField(fieldType: IM_BaseDefine_UserStatType.self, value: &_status)
    case 3: try setter.decodeSingularField(fieldType: IM_BaseDefine_ClientType.self, value: &_clientType)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_UserStatType.self, value: _status ?? IM_BaseDefine_UserStatType.userStatusOnline, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_ClientType.self, value: _clientType ?? IM_BaseDefine_ClientType.windows, protoFieldNumber: 3)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_ServerUserStat) -> Bool {
    if (userId != other.userId) {return false}
    if (status != other.status) {return false}
    if (clientType != other.clientType) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_UnreadInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_UnreadInfo"}
  public var protoMessageName: String {return "UnreadInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "session_id", json: "sessionId", swift: "sessionId"),
    2: .unique(proto: "session_type", json: "sessionType", swift: "sessionType"),
    3: .unique(proto: "unread_cnt", json: "unreadCnt", swift: "unreadCnt"),
    4: .unique(proto: "latest_msg_id", json: "latestMsgId", swift: "latestMsgId"),
    5: .unique(proto: "latest_msg_data", json: "latestMsgData", swift: "latestMsgData"),
    6: .unique(proto: "latest_msg_type", json: "latestMsgType", swift: "latestMsgType"),
    7: .unique(proto: "latest_msg_from_user_id", json: "latestMsgFromUserId", swift: "latestMsgFromUserId"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _sessionId: UInt32? = nil
  var sessionId: UInt32 {
    get {return _sessionId ?? 0}
    set {_sessionId = newValue}
  }
  public var hasSessionId: Bool {
    return _sessionId != nil
  }
  public mutating func clearSessionId() {
    return _sessionId = nil
  }

  private var _sessionType: IM_BaseDefine_SessionType? = nil
  var sessionType: IM_BaseDefine_SessionType {
    get {return _sessionType ?? IM_BaseDefine_SessionType.single}
    set {_sessionType = newValue}
  }
  public var hasSessionType: Bool {
    return _sessionType != nil
  }
  public mutating func clearSessionType() {
    return _sessionType = nil
  }

  private var _unreadCnt: UInt32? = nil
  var unreadCnt: UInt32 {
    get {return _unreadCnt ?? 0}
    set {_unreadCnt = newValue}
  }
  public var hasUnreadCnt: Bool {
    return _unreadCnt != nil
  }
  public mutating func clearUnreadCnt() {
    return _unreadCnt = nil
  }

  private var _latestMsgId: UInt32? = nil
  var latestMsgId: UInt32 {
    get {return _latestMsgId ?? 0}
    set {_latestMsgId = newValue}
  }
  public var hasLatestMsgId: Bool {
    return _latestMsgId != nil
  }
  public mutating func clearLatestMsgId() {
    return _latestMsgId = nil
  }

  private var _latestMsgData: Data? = nil
  var latestMsgData: Data {
    get {return _latestMsgData ?? Data()}
    set {_latestMsgData = newValue}
  }
  public var hasLatestMsgData: Bool {
    return _latestMsgData != nil
  }
  public mutating func clearLatestMsgData() {
    return _latestMsgData = nil
  }

  private var _latestMsgType: IM_BaseDefine_MsgType? = nil
  var latestMsgType: IM_BaseDefine_MsgType {
    get {return _latestMsgType ?? IM_BaseDefine_MsgType.singleText}
    set {_latestMsgType = newValue}
  }
  public var hasLatestMsgType: Bool {
    return _latestMsgType != nil
  }
  public mutating func clearLatestMsgType() {
    return _latestMsgType = nil
  }

  ///  发送得用户id
  private var _latestMsgFromUserId: UInt32? = nil
  var latestMsgFromUserId: UInt32 {
    get {return _latestMsgFromUserId ?? 0}
    set {_latestMsgFromUserId = newValue}
  }
  public var hasLatestMsgFromUserId: Bool {
    return _latestMsgFromUserId != nil
  }
  public mutating func clearLatestMsgFromUserId() {
    return _latestMsgFromUserId = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_sessionId)
    case 2: try setter.decodeSingularField(fieldType: IM_BaseDefine_SessionType.self, value: &_sessionType)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_unreadCnt)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_latestMsgId)
    case 5: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: &_latestMsgData)
    case 6: try setter.decodeSingularField(fieldType: IM_BaseDefine_MsgType.self, value: &_latestMsgType)
    case 7: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_latestMsgFromUserId)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _sessionId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_SessionType.self, value: _sessionType ?? IM_BaseDefine_SessionType.single, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _unreadCnt ?? 0, protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _latestMsgId ?? 0, protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: _latestMsgData ?? Data(), protoFieldNumber: 5)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_MsgType.self, value: _latestMsgType ?? IM_BaseDefine_MsgType.singleText, protoFieldNumber: 6)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _latestMsgFromUserId ?? 0, protoFieldNumber: 7)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_UnreadInfo) -> Bool {
    if (sessionId != other.sessionId) {return false}
    if (sessionType != other.sessionType) {return false}
    if (unreadCnt != other.unreadCnt) {return false}
    if (latestMsgId != other.latestMsgId) {return false}
    if (latestMsgData != other.latestMsgData) {return false}
    if (latestMsgType != other.latestMsgType) {return false}
    if (latestMsgFromUserId != other.latestMsgFromUserId) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_MsgInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_MsgInfo"}
  public var protoMessageName: String {return "MsgInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "msg_id", json: "msgId", swift: "msgId"),
    2: .unique(proto: "from_session_id", json: "fromSessionId", swift: "fromSessionId"),
    3: .unique(proto: "create_time", json: "createTime", swift: "createTime"),
    4: .unique(proto: "msg_type", json: "msgType", swift: "msgType"),
    5: .unique(proto: "msg_data", json: "msgData", swift: "msgData"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _msgId: UInt32? = nil
  var msgId: UInt32 {
    get {return _msgId ?? 0}
    set {_msgId = newValue}
  }
  public var hasMsgId: Bool {
    return _msgId != nil
  }
  public mutating func clearMsgId() {
    return _msgId = nil
  }

  ///  发送的用户id
  private var _fromSessionId: UInt32? = nil
  var fromSessionId: UInt32 {
    get {return _fromSessionId ?? 0}
    set {_fromSessionId = newValue}
  }
  public var hasFromSessionId: Bool {
    return _fromSessionId != nil
  }
  public mutating func clearFromSessionId() {
    return _fromSessionId = nil
  }

  private var _createTime: UInt32? = nil
  var createTime: UInt32 {
    get {return _createTime ?? 0}
    set {_createTime = newValue}
  }
  public var hasCreateTime: Bool {
    return _createTime != nil
  }
  public mutating func clearCreateTime() {
    return _createTime = nil
  }

  private var _msgType: IM_BaseDefine_MsgType? = nil
  var msgType: IM_BaseDefine_MsgType {
    get {return _msgType ?? IM_BaseDefine_MsgType.singleText}
    set {_msgType = newValue}
  }
  public var hasMsgType: Bool {
    return _msgType != nil
  }
  public mutating func clearMsgType() {
    return _msgType = nil
  }

  private var _msgData: Data? = nil
  var msgData: Data {
    get {return _msgData ?? Data()}
    set {_msgData = newValue}
  }
  public var hasMsgData: Bool {
    return _msgData != nil
  }
  public mutating func clearMsgData() {
    return _msgData = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_msgId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_fromSessionId)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_createTime)
    case 4: try setter.decodeSingularField(fieldType: IM_BaseDefine_MsgType.self, value: &_msgType)
    case 5: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: &_msgData)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _msgId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _fromSessionId ?? 0, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _createTime ?? 0, protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_MsgType.self, value: _msgType ?? IM_BaseDefine_MsgType.singleText, protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: _msgData ?? Data(), protoFieldNumber: 5)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_MsgInfo) -> Bool {
    if (msgId != other.msgId) {return false}
    if (fromSessionId != other.fromSessionId) {return false}
    if (createTime != other.createTime) {return false}
    if (msgType != other.msgType) {return false}
    if (msgData != other.msgData) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_GroupVersionInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_GroupVersionInfo"}
  public var protoMessageName: String {return "GroupVersionInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "group_id", json: "groupId", swift: "groupId"),
    2: .same(proto: "version", swift: "version"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _groupId: UInt32? = nil
  var groupId: UInt32 {
    get {return _groupId ?? 0}
    set {_groupId = newValue}
  }
  public var hasGroupId: Bool {
    return _groupId != nil
  }
  public mutating func clearGroupId() {
    return _groupId = nil
  }

  private var _version: UInt32? = nil
  var version: UInt32 {
    get {return _version ?? 0}
    set {_version = newValue}
  }
  public var hasVersion: Bool {
    return _version != nil
  }
  public mutating func clearVersion() {
    return _version = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_groupId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_version)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _groupId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _version ?? 0, protoFieldNumber: 2)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_GroupVersionInfo) -> Bool {
    if (groupId != other.groupId) {return false}
    if (version != other.version) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_GroupInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_GroupInfo"}
  public var protoMessageName: String {return "GroupInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "group_id", json: "groupId", swift: "groupId"),
    2: .same(proto: "version", swift: "version"),
    3: .unique(proto: "group_name", json: "groupName", swift: "groupName"),
    4: .unique(proto: "group_avatar", json: "groupAvatar", swift: "groupAvatar"),
    5: .unique(proto: "group_creator_id", json: "groupCreatorId", swift: "groupCreatorId"),
    6: .unique(proto: "group_type", json: "groupType", swift: "groupType"),
    7: .unique(proto: "shield_status", json: "shieldStatus", swift: "shieldStatus"),
    8: .unique(proto: "group_member_list", json: "groupMemberList", swift: "groupMemberList"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _groupId: UInt32? = nil
  var groupId: UInt32 {
    get {return _groupId ?? 0}
    set {_groupId = newValue}
  }
  public var hasGroupId: Bool {
    return _groupId != nil
  }
  public mutating func clearGroupId() {
    return _groupId = nil
  }

  private var _version: UInt32? = nil
  var version: UInt32 {
    get {return _version ?? 0}
    set {_version = newValue}
  }
  public var hasVersion: Bool {
    return _version != nil
  }
  public mutating func clearVersion() {
    return _version = nil
  }

  private var _groupName: String? = nil
  var groupName: String {
    get {return _groupName ?? ""}
    set {_groupName = newValue}
  }
  public var hasGroupName: Bool {
    return _groupName != nil
  }
  public mutating func clearGroupName() {
    return _groupName = nil
  }

  private var _groupAvatar: String? = nil
  var groupAvatar: String {
    get {return _groupAvatar ?? ""}
    set {_groupAvatar = newValue}
  }
  public var hasGroupAvatar: Bool {
    return _groupAvatar != nil
  }
  public mutating func clearGroupAvatar() {
    return _groupAvatar = nil
  }

  private var _groupCreatorId: UInt32? = nil
  var groupCreatorId: UInt32 {
    get {return _groupCreatorId ?? 0}
    set {_groupCreatorId = newValue}
  }
  public var hasGroupCreatorId: Bool {
    return _groupCreatorId != nil
  }
  public mutating func clearGroupCreatorId() {
    return _groupCreatorId = nil
  }

  private var _groupType: IM_BaseDefine_GroupType? = nil
  var groupType: IM_BaseDefine_GroupType {
    get {return _groupType ?? IM_BaseDefine_GroupType.normal}
    set {_groupType = newValue}
  }
  public var hasGroupType: Bool {
    return _groupType != nil
  }
  public mutating func clearGroupType() {
    return _groupType = nil
  }

  ///  1: shield  0: not shield 
  private var _shieldStatus: UInt32? = nil
  var shieldStatus: UInt32 {
    get {return _shieldStatus ?? 0}
    set {_shieldStatus = newValue}
  }
  public var hasShieldStatus: Bool {
    return _shieldStatus != nil
  }
  public mutating func clearShieldStatus() {
    return _shieldStatus = nil
  }

  var groupMemberList: [UInt32] = []

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_groupId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_version)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_groupName)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_groupAvatar)
    case 5: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_groupCreatorId)
    case 6: try setter.decodeSingularField(fieldType: IM_BaseDefine_GroupType.self, value: &_groupType)
    case 7: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_shieldStatus)
    case 8: try setter.decodeRepeatedField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &groupMemberList)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _groupId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _version ?? 0, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _groupName ?? "", protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _groupAvatar ?? "", protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _groupCreatorId ?? 0, protoFieldNumber: 5)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_GroupType.self, value: _groupType ?? IM_BaseDefine_GroupType.normal, protoFieldNumber: 6)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _shieldStatus ?? 0, protoFieldNumber: 7)
    if !groupMemberList.isEmpty {
      try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: groupMemberList, protoFieldNumber: 8)
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_GroupInfo) -> Bool {
    if (groupId != other.groupId) {return false}
    if (version != other.version) {return false}
    if (groupName != other.groupName) {return false}
    if (groupAvatar != other.groupAvatar) {return false}
    if (groupCreatorId != other.groupCreatorId) {return false}
    if (groupType != other.groupType) {return false}
    if (shieldStatus != other.shieldStatus) {return false}
    if groupMemberList != other.groupMemberList {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_UserTokenInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_UserTokenInfo"}
  public var protoMessageName: String {return "UserTokenInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_id", json: "userId", swift: "userId"),
    2: .unique(proto: "user_type", json: "userType", swift: "userType"),
    3: .same(proto: "token", swift: "token"),
    4: .unique(proto: "push_count", json: "pushCount", swift: "pushCount"),
    5: .unique(proto: "push_type", json: "pushType", swift: "pushType"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userId: UInt32? = nil
  var userId: UInt32 {
    get {return _userId ?? 0}
    set {_userId = newValue}
  }
  public var hasUserId: Bool {
    return _userId != nil
  }
  public mutating func clearUserId() {
    return _userId = nil
  }

  private var _userType: IM_BaseDefine_ClientType? = nil
  var userType: IM_BaseDefine_ClientType {
    get {return _userType ?? IM_BaseDefine_ClientType.windows}
    set {_userType = newValue}
  }
  public var hasUserType: Bool {
    return _userType != nil
  }
  public mutating func clearUserType() {
    return _userType = nil
  }

  private var _token: String? = nil
  var token: String {
    get {return _token ?? ""}
    set {_token = newValue}
  }
  public var hasToken: Bool {
    return _token != nil
  }
  public mutating func clearToken() {
    return _token = nil
  }

  private var _pushCount: UInt32? = nil
  var pushCount: UInt32 {
    get {return _pushCount ?? 0}
    set {_pushCount = newValue}
  }
  public var hasPushCount: Bool {
    return _pushCount != nil
  }
  public mutating func clearPushCount() {
    return _pushCount = nil
  }

  ///  1: 正常推送  	2:无打扰式推送
  private var _pushType: UInt32? = nil
  var pushType: UInt32 {
    get {return _pushType ?? 0}
    set {_pushType = newValue}
  }
  public var hasPushType: Bool {
    return _pushType != nil
  }
  public mutating func clearPushType() {
    return _pushType = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userId)
    case 2: try setter.decodeSingularField(fieldType: IM_BaseDefine_ClientType.self, value: &_userType)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_token)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_pushCount)
    case 5: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_pushType)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_ClientType.self, value: _userType ?? IM_BaseDefine_ClientType.windows, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _token ?? "", protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _pushCount ?? 0, protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _pushType ?? 0, protoFieldNumber: 5)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_UserTokenInfo) -> Bool {
    if (userId != other.userId) {return false}
    if (userType != other.userType) {return false}
    if (token != other.token) {return false}
    if (pushCount != other.pushCount) {return false}
    if (pushType != other.pushType) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_PushResult: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_PushResult"}
  public var protoMessageName: String {return "PushResult"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_token", json: "userToken", swift: "userToken"),
    2: .unique(proto: "result_code", json: "resultCode", swift: "resultCode"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userToken: String? = nil
  var userToken: String {
    get {return _userToken ?? ""}
    set {_userToken = newValue}
  }
  public var hasUserToken: Bool {
    return _userToken != nil
  }
  public mutating func clearUserToken() {
    return _userToken = nil
  }

  private var _resultCode: UInt32? = nil
  var resultCode: UInt32 {
    get {return _resultCode ?? 0}
    set {_resultCode = newValue}
  }
  public var hasResultCode: Bool {
    return _resultCode != nil
  }
  public mutating func clearResultCode() {
    return _resultCode = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_userToken)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_resultCode)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _userToken ?? "", protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _resultCode ?? 0, protoFieldNumber: 2)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_PushResult) -> Bool {
    if (userToken != other.userToken) {return false}
    if (resultCode != other.resultCode) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_ShieldStatus: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_ShieldStatus"}
  public var protoMessageName: String {return "ShieldStatus"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_id", json: "userId", swift: "userId"),
    2: .unique(proto: "group_id", json: "groupId", swift: "groupId"),
    3: .unique(proto: "shield_status", json: "shieldStatus", swift: "shieldStatus"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userId: UInt32? = nil
  var userId: UInt32 {
    get {return _userId ?? 0}
    set {_userId = newValue}
  }
  public var hasUserId: Bool {
    return _userId != nil
  }
  public mutating func clearUserId() {
    return _userId = nil
  }

  private var _groupId: UInt32? = nil
  var groupId: UInt32 {
    get {return _groupId ?? 0}
    set {_groupId = newValue}
  }
  public var hasGroupId: Bool {
    return _groupId != nil
  }
  public mutating func clearGroupId() {
    return _groupId = nil
  }

  ///  1: shield  0: not shield 
  private var _shieldStatus: UInt32? = nil
  var shieldStatus: UInt32 {
    get {return _shieldStatus ?? 0}
    set {_shieldStatus = newValue}
  }
  public var hasShieldStatus: Bool {
    return _shieldStatus != nil
  }
  public mutating func clearShieldStatus() {
    return _shieldStatus = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_groupId)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_shieldStatus)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _groupId ?? 0, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _shieldStatus ?? 0, protoFieldNumber: 3)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_ShieldStatus) -> Bool {
    if (userId != other.userId) {return false}
    if (groupId != other.groupId) {return false}
    if (shieldStatus != other.shieldStatus) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_OfflineFileInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_OfflineFileInfo"}
  public var protoMessageName: String {return "OfflineFileInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "from_user_id", json: "fromUserId", swift: "fromUserId"),
    2: .unique(proto: "task_id", json: "taskId", swift: "taskId"),
    3: .unique(proto: "file_name", json: "fileName", swift: "fileName"),
    4: .unique(proto: "file_size", json: "fileSize", swift: "fileSize"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _fromUserId: UInt32? = nil
  var fromUserId: UInt32 {
    get {return _fromUserId ?? 0}
    set {_fromUserId = newValue}
  }
  public var hasFromUserId: Bool {
    return _fromUserId != nil
  }
  public mutating func clearFromUserId() {
    return _fromUserId = nil
  }

  private var _taskId: String? = nil
  var taskId: String {
    get {return _taskId ?? ""}
    set {_taskId = newValue}
  }
  public var hasTaskId: Bool {
    return _taskId != nil
  }
  public mutating func clearTaskId() {
    return _taskId = nil
  }

  private var _fileName: String? = nil
  var fileName: String {
    get {return _fileName ?? ""}
    set {_fileName = newValue}
  }
  public var hasFileName: Bool {
    return _fileName != nil
  }
  public mutating func clearFileName() {
    return _fileName = nil
  }

  private var _fileSize: UInt32? = nil
  var fileSize: UInt32 {
    get {return _fileSize ?? 0}
    set {_fileSize = newValue}
  }
  public var hasFileSize: Bool {
    return _fileSize != nil
  }
  public mutating func clearFileSize() {
    return _fileSize = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_fromUserId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_taskId)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_fileName)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_fileSize)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _fromUserId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _taskId ?? "", protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _fileName ?? "", protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _fileSize ?? 0, protoFieldNumber: 4)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_OfflineFileInfo) -> Bool {
    if (fromUserId != other.fromUserId) {return false}
    if (taskId != other.taskId) {return false}
    if (fileName != other.fileName) {return false}
    if (fileSize != other.fileSize) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_DepartInfo: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_DepartInfo"}
  public var protoMessageName: String {return "DepartInfo"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "dept_id", json: "deptId", swift: "deptId"),
    2: .same(proto: "priority", swift: "priority"),
    3: .unique(proto: "dept_name", json: "deptName", swift: "deptName"),
    4: .unique(proto: "parent_dept_id", json: "parentDeptId", swift: "parentDeptId"),
    5: .unique(proto: "dept_status", json: "deptStatus", swift: "deptStatus"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _deptId: UInt32? = nil
  var deptId: UInt32 {
    get {return _deptId ?? 0}
    set {_deptId = newValue}
  }
  public var hasDeptId: Bool {
    return _deptId != nil
  }
  public mutating func clearDeptId() {
    return _deptId = nil
  }

  private var _priority: UInt32? = nil
  var priority: UInt32 {
    get {return _priority ?? 0}
    set {_priority = newValue}
  }
  public var hasPriority: Bool {
    return _priority != nil
  }
  public mutating func clearPriority() {
    return _priority = nil
  }

  private var _deptName: String? = nil
  var deptName: String {
    get {return _deptName ?? ""}
    set {_deptName = newValue}
  }
  public var hasDeptName: Bool {
    return _deptName != nil
  }
  public mutating func clearDeptName() {
    return _deptName = nil
  }

  private var _parentDeptId: UInt32? = nil
  var parentDeptId: UInt32 {
    get {return _parentDeptId ?? 0}
    set {_parentDeptId = newValue}
  }
  public var hasParentDeptId: Bool {
    return _parentDeptId != nil
  }
  public mutating func clearParentDeptId() {
    return _parentDeptId = nil
  }

  private var _deptStatus: IM_BaseDefine_DepartmentStatusType? = nil
  var deptStatus: IM_BaseDefine_DepartmentStatusType {
    get {return _deptStatus ?? IM_BaseDefine_DepartmentStatusType.deptStatusOk}
    set {_deptStatus = newValue}
  }
  public var hasDeptStatus: Bool {
    return _deptStatus != nil
  }
  public mutating func clearDeptStatus() {
    return _deptStatus = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_deptId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_priority)
    case 3: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: &_deptName)
    case 4: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_parentDeptId)
    case 5: try setter.decodeSingularField(fieldType: IM_BaseDefine_DepartmentStatusType.self, value: &_deptStatus)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _deptId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _priority ?? 0, protoFieldNumber: 2)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: _deptName ?? "", protoFieldNumber: 3)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _parentDeptId ?? 0, protoFieldNumber: 4)
    try visitor.visitSingularField(fieldType: IM_BaseDefine_DepartmentStatusType.self, value: _deptStatus ?? IM_BaseDefine_DepartmentStatusType.deptStatusOk, protoFieldNumber: 5)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_DepartInfo) -> Bool {
    if (deptId != other.deptId) {return false}
    if (priority != other.priority) {return false}
    if (deptName != other.deptName) {return false}
    if (parentDeptId != other.parentDeptId) {return false}
    if (deptStatus != other.deptStatus) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

struct IM_BaseDefine_PushShieldStatus: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  public var swiftClassName: String {return "IM_BaseDefine_PushShieldStatus"}
  public var protoMessageName: String {return "PushShieldStatus"}
  public var protoPackageName: String {return "IM.BaseDefine"}
  public static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "user_id", json: "userId", swift: "userId"),
    2: .unique(proto: "shield_status", json: "shieldStatus", swift: "shieldStatus"),
  ]

  public var unknown = SwiftProtobuf.UnknownStorage()

  private var _userId: UInt32? = nil
  var userId: UInt32 {
    get {return _userId ?? 0}
    set {_userId = newValue}
  }
  public var hasUserId: Bool {
    return _userId != nil
  }
  public mutating func clearUserId() {
    return _userId = nil
  }

  ///  1: shield  0: not shield
  private var _shieldStatus: UInt32? = nil
  var shieldStatus: UInt32 {
    get {return _shieldStatus ?? 0}
    set {_shieldStatus = newValue}
  }
  public var hasShieldStatus: Bool {
    return _shieldStatus != nil
  }
  public mutating func clearShieldStatus() {
    return _shieldStatus = nil
  }

  init() {}

  public mutating func _protoc_generated_decodeField(setter: inout SwiftProtobuf.FieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_userId)
    case 2: try setter.decodeSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: &_shieldStatus)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout SwiftProtobuf.Visitor) throws {
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _userId ?? 0, protoFieldNumber: 1)
    try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _shieldStatus ?? 0, protoFieldNumber: 2)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: IM_BaseDefine_PushShieldStatus) -> Bool {
    if (userId != other.userId) {return false}
    if (shieldStatus != other.shieldStatus) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}
